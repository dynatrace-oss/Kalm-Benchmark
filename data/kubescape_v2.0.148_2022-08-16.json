[{"name": "MITRE", "controlReports": [{"guid": "", "id": "C-0026", "controlID": "C-0026", "name": "Kubernetes CronJob", "ruleReports": [], "remediation": "Watch Kubernetes CronJobs and make sure they are legitimate.", "description": "Attackers may use Kubernetes CronJob for scheduling execution of malicious code that would run as a POD in the cluster. This control lists all the CronJobs that exist in the cluster for the user to approve.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0053", "controlID": "C-0053", "name": "Access container service account", "ruleReports": [], "remediation": "Verify that RBAC is enabled. Follow the least privilege principle and ensure that only necessary PODs have SA token mounted into them.", "description": "Attackers who obtain access to a pod can use its SA token to communicate with KubeAPI server. All PODs with SA token mounted (if such token has a Role or a ClusterRole binding) are considerred potentially dangerous.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0042", "controlID": "C-0042", "name": "SSH server running inside container", "ruleReports": [], "remediation": "Remove SSH from the container image or limit the access to the SSH server using network policies.", "description": "An SSH server that is running inside a container may be used by attackers to get remote access to the container. This control checks if pods have an open SSH port (22/2222).", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0036", "controlID": "C-0036", "name": "Malicious admission controller (validating)", "ruleReports": [], "remediation": "Ensure all the webhooks are necessary. Use exception mechanism to prevent repititive notifications.", "description": "Attackers can use validating webhooks to intercept and discover all the resources in the cluster. This control lists all the validating webhook configurations that must be verified.", "score": 7, "baseScore": 7, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0012", "controlID": "C-0012", "name": "Applications credentials in configuration files", "ruleReports": [{"name": "rule-credentials-configmap", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["data[aws_access_key_id]", "data[aws_secret_access_key]", "data[azure_batchai_storage_account]", "data[azure_batchai_storage_key]", "data[azure_batch_account]", "data[azure_batch_key]", "data[secret]", "data[key]", "data[password]", "data[pwd]", "data[token]", "data[jwt]", "data[bearer]", "data[credential]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "data": {"aws_access_key_id": "XXXXXX", "aws_secret_access_key": "XXXXXX", "azure_batch_account": "XXXXXX", "azure_batch_key": "XXXXXX", "azure_batchai_storage_account": "XXXXXX", "azure_batchai_storage_key": "XXXXXX", "bearer": "XXXXXX", "credential": "XXXXXX", "jwt": "XXXXXX", "key": "XXXXXX", "password": "XXXXXX", "pwd": "XXXXXX", "secret": "XXXXXX", "token": "XXXXXX"}, "kind": "ConfigMap", "metadata": {"annotations": {"check_path": ".data.aws_access_key_id|.data.aws_secret_access_key|.data.azure_batchai_storage_account|.data.azure_batchai_storage_key|.data.azure_batch_account|.data.azure_batch_key|.data.secret|.data.key|.data.password|.data.pwd|.data.token|.data.jwt|.data.bearer|.data.credential", "description": "Attackers can retrieve and use sensitive information provided via config maps", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "CM-001"}, "name": "cm-001-sensitive-key-referenced-in-configmap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-configmap"}], "listInputIDs": ["/v1/kalm-benchmark/ConfigMap/cm-001-sensitive-key-referenced-in-configmap"], "totalResources": 1, "failedResources": 1, "warningResources": 0}, {"name": "rule-credentials-in-env-var", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].env[0].name", "spec.template.spec.containers[0].env[1].name", "spec.template.spec.containers[0].env[2].name", "spec.template.spec.containers[0].env[3].name", "spec.template.spec.containers[0].env[4].name", "spec.template.spec.containers[0].env[5].name", "spec.template.spec.containers[0].env[6].name", "spec.template.spec.containers[0].env[7].name", "spec.template.spec.containers[0].env[8].name", "spec.template.spec.containers[0].env[9].name", "spec.template.spec.containers[0].env[10].name", "spec.template.spec.containers[0].env[11].name", "spec.template.spec.containers[0].env[12].name", "spec.template.spec.containers[0].env[13].name"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-in-env-var"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Use Kubernetes secrets or Key Management Systems to store credentials.", "description": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration.", "score": 1.4184397, "baseScore": 8, "totalResources": 141, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0035", "controlID": "C-0035", "name": "Cluster-admin binding", "ruleReports": [{"name": "rule-list-all-cluster-admins-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should apply least privilege principle. Make sure cluster admin permissions are granted only when it is absolutely necessary. Don't use subjects with such high permissions for daily operations.", "description": "Attackers who have cluster admin permissions (can perform any action on any resource), can take advantage of their privileges for malicious activities. This control determines which subjects have cluster admin permissions.", "score": 8.333333, "baseScore": 8, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0020", "controlID": "C-0020", "name": "Mount service principal", "ruleReports": [{"name": "alert-any-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default"], "totalResources": 140, "failedResources": 6, "warningResources": 0}], "remediation": "Refrain from using host path mount.", "description": "When a cluster is deployed in the cloud, in some cases attackers can leverage their access to a container in the cluster to gain cloud credentials. This control determines if any workload contains a hostPath volume.", "score": 4.285714, "baseScore": 4, "totalResources": 140, "failedResources": 6, "warningResources": 0}, {"guid": "", "id": "C-0057", "controlID": "C-0057", "name": "Privileged container", "ruleReports": [{"name": "rule-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.privileged"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.", "description": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0068", "controlID": "C-0068", "name": "PSP enabled", "ruleReports": [], "remediation": "Turn Pod Security Policies on in your cluster, if you use other admission controllers to control the behavior that PSP controls, exclude this control from your scans", "description": "PSP enable fine-grained authorization of pod creation and it is important to enable it", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0069", "controlID": "C-0069", "name": "Disable anonymous access to Kubelet service", "ruleReports": [], "remediation": "Start the kubelet with the --anonymous-auth=false flag.", "description": "By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of system:anonymous and a group of system:unauthenticated.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0021", "controlID": "C-0021", "name": "Exposed sensitive interfaces", "ruleReports": [], "remediation": "Consider blocking external interfaces or protect them with appropriate security tools.", "description": "Exposing a sensitive interface to the internet poses a security risk. It might enable attackers to run malicious code or deploy containers in the cluster. This control checks if known components (e.g. Kubeflow, Argo Workflows, etc.) are deployed and exposed services externally.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0048", "controlID": "C-0048", "name": "HostPath mount", "ruleReports": [{"name": "alert-any-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional"], "totalResources": 140, "failedResources": 6, "warningResources": 0}], "remediation": "Remove hostPath mounts unless they are absolutely necessary and use exception mechanism to remove notifications.", "description": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount.", "score": 4.285714, "baseScore": 6, "totalResources": 140, "failedResources": 6, "warningResources": 0}, {"guid": "", "id": "C-0015", "controlID": "C-0015", "name": "List Kubernetes secrets", "ruleReports": [{"name": "rule-can-list-get-secrets-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Monitor and approve list of users, groups and service accounts that can access secrets. Use exception mechanism to prevent repetitive the notifications.", "description": "Attackers who have permissions to access secrets can access sensitive information that might include credentials to various services. This control determines which user, group or service account can list/get secrets.", "score": 8.333333, "baseScore": 7, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0059", "controlID": "C-0059", "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability", "ruleReports": [], "remediation": "To mitigate this vulnerability: 1. Upgrade to a version that allows mitigation (>= v0.49.1 or >= v1.0.1), 2. Set allow-snippet-annotations to false in your ingress-nginx ConfigMap based on how you deploy ingress-nginx", "description": "Security issue in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster (see more at https://github.com/kubernetes/ingress-nginx/issues/7837)", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0067", "controlID": "C-0067", "name": "Audit logs enabled", "ruleReports": [], "remediation": "Turn on audit logging for your cluster. Look at the vendor guidelines for more details", "description": "Audit logging is an important security feature in Kubernetes, it enables the operator to track requests to the cluster. It is important to use it so the operator has a record of events happened in Kubernetes", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0045", "controlID": "C-0045", "name": "Writable hostPath mount", "ruleReports": [{"name": "alert-rw-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].volumeMounts[0].readOnly"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].volumeMounts[0].readOnly", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Refrain from using the hostPath mount or use the exception mechanism to remove unnecessary notifications.", "description": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0037", "controlID": "C-0037", "name": "CoreDNS poisoning", "ruleReports": [{"name": "rule-can-update-configmap-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle. Monitor and approve all the subjects allowed to modify the 'coredns' configmap. It is also recommended to remove this permission from the users/service accounts used in the daily operations.", "description": "If attackers have permissions to modify the coredns ConfigMap they can change the behavior of the cluster\u2019s DNS, poison it, and override the network identity of other services. This control identifies all subjects allowed to update the 'coredns' configmap.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0058", "controlID": "C-0058", "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.", "ruleReports": [], "remediation": "To mitigate this vulnerability without upgrading kubelet, you can disable the VolumeSubpath feature gate on kubelet and kube-apiserver, or remove any existing Pods using subPath or subPathExpr feature.", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0 - v1.22.1, v1.21.0 - v1.21.4, v1.20.0 - v1.20.10, version v1.19.14 and lower. This control checks the vulnerable versions and the actual usage of the subPath feature in all Pods in the cluster. If you want to learn more about the CVE, please refer to the CVE link: https://nvd.nist.gov/vuln/detail/CVE-2021-25741", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0033", "controlID": "C-0033", "name": "Access tiller endpoint", "ruleReports": [], "remediation": "Use version higher than 2 of Helm which doesn\u2019t use Tiller", "description": "Attackers may run code on any container that is accessible to the tiller\u2019s service and perform actions in the cluster, using the tiller\u2019s service account, which often has high privileges. This control checks if unauthenticated version of the Tiller runs in the cluster.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0047", "controlID": "C-0047", "name": "Exposed dashboard", "ruleReports": [], "remediation": "Update dashboard version to v2.0.1 and above.", "description": "Kubernetes dashboard versions before v2.0.1 do not support user authentication. If exposed externally, it will allow unauthenticated remote management of the cluster. This control checks presence of the kubernetes-dashboard deployment and its version number.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0031", "controlID": "C-0031", "name": "Delete Kubernetes events", "ruleReports": [{"name": "rule-can-delete-k8s-events-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle. Minimize the number of subjects who can delete Kubernetes events. Avoid using these subjects in the daily operations.", "description": "Attackers may delete Kubernetes events to avoid detection of their activity in the cluster. This control identifies all the subjects that can delete Kubernetes events.", "score": 8.333333, "baseScore": 4, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0066", "controlID": "C-0066", "name": "Secret/ETCD encryption enabled", "ruleReports": [], "remediation": "Turn on the etcd encryption in your cluster, for more see the vendor documentation.", "description": "All Kubernetes Secrets are stored primarily in etcd therefore it is important to encrypt it.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0070", "controlID": "C-0070", "name": "Enforce Kubelet client TLS authentication", "ruleReports": [], "remediation": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.", "description": "Kubelets are the node level orchestrator in Kubernetes control plane. They are publishing service port 10250 where they accept commands from API server. Operator must make sure that only API server is allowed to submit commands to Kubelet. This is done through client certificate verification, must configure Kubelet with client CA file to use for this purpose.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0014", "controlID": "C-0014", "name": "Access Kubernetes dashboard", "ruleReports": [{"name": "rule-access-dashboard-wl-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace"], "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"name": "rule-access-dashboard-subject-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Make sure that the \u201cKubernetes Dashboard\u201d service account is only bound to the Kubernetes dashboard following the least privilege principle.", "description": "Attackers who gain access to the dashboard service account or have its RBAC permissions can use its network access to retrieve information about resources in the cluster or change them. This control checks if a subject that is not dashboard service account is bound to dashboard role/clusterrole, or - if anyone that is not the dashboard pod is associated with dashboard service account.", "score": 0.65789473, "baseScore": 2, "totalResources": 152, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0054", "controlID": "C-0054", "name": "Cluster internal networking", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1//Namespace/kalm-benchmark", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define Kubernetes network policies or use alternative products to protect cluster network.", "description": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0002", "controlID": "C-0002", "name": "Exec into container", "ruleReports": [{"name": "exec-into-container-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl exec\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant permissions can run malicious commands in the context of legitimate containers in the cluster using \u201ckubectl exec\u201d command. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0039", "controlID": "C-0039", "name": "Malicious admission controller (mutating)", "ruleReports": [], "remediation": "Ensure all the webhooks are necessary. Use exception mechanism to prevent repititive notifications.", "description": "Attackers may use mutating webhooks to intercept and modify all the resources in the cluster. This control lists all mutating webhook configurations that must be verified.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0007", "controlID": "C-0007", "name": "Data Destruction", "ruleReports": [{"name": "rule-excessive-delete-rights-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle and minimize the number of subjects that can delete resources.", "description": "Attackers may attempt to destroy data and resources in the cluster. This includes deleting deployments, configurations, storage, and compute resources. This control identifies all subjects that can delete resources.", "score": 8.333333, "baseScore": 10, "totalResources": 12, "failedResources": 0, "warningResources": 0}], "score": 4.475749, "wcsScore": 5608, "totalResources": 170, "failedResources": 13, "warningResources": 0}, {"name": "AllControls", "controlReports": [{"guid": "", "id": "C-0066", "controlID": "C-0066", "name": "Secret/ETCD encryption enabled", "ruleReports": [], "remediation": "Turn on the etcd encryption in your cluster, for more see the vendor documentation.", "description": "All Kubernetes Secrets are stored primarily in etcd therefore it is important to encrypt it.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0047", "controlID": "C-0047", "name": "Exposed dashboard", "ruleReports": [], "remediation": "Update dashboard version to v2.0.1 and above.", "description": "Kubernetes dashboard versions before v2.0.1 do not support user authentication. If exposed externally, it will allow unauthenticated remote management of the cluster. This control checks presence of the kubernetes-dashboard deployment and its version number.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0035", "controlID": "C-0035", "name": "Cluster-admin binding", "ruleReports": [{"name": "rule-list-all-cluster-admins-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should apply least privilege principle. Make sure cluster admin permissions are granted only when it is absolutely necessary. Don't use subjects with such high permissions for daily operations.", "description": "Attackers who have cluster admin permissions (can perform any action on any resource), can take advantage of their privileges for malicious activities. This control determines which subjects have cluster admin permissions.", "score": 8.333333, "baseScore": 8, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0005", "controlID": "C-0005", "name": "Control plane hardening", "ruleReports": [], "remediation": "Set the insecure-port flag of the API server to zero.", "description": "Kubernetes control plane API is running with non-secure port enabled which allows attackers to gain unprotected access to the cluster.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0078", "controlID": "C-0078", "name": "Images from allowed registry", "ruleReports": [{"name": "container-image-repository", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}], "listInputIDs": ["apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "You should enable all trusted repositories in the parameters of this control.", "description": "This control is intended to ensure that all the used container images are taken from the authorized repositories. It allows user to list all the approved repositories and will fail all the images taken from any repository outside of this list.", "score": 100, "baseScore": 5, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"guid": "", "id": "C-0077", "controlID": "C-0077", "name": "K8s common labels usage", "ruleReports": [{"name": "K8s common labels usage", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Define applicable labels or use the exception mechanism to prevent further notifications.", "description": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined.", "score": 0.71428573, "baseScore": 1, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0006", "controlID": "C-0006", "name": "Allowed hostPath", "ruleReports": [{"name": "alert-rw-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].volumeMounts[0].readOnly"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].volumeMounts[0].readOnly", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Refrain from using host path mount.", "description": "Mounting host directory to the container can be abused to get access to sensitive data and gain persistence on the host machine.", "score": 1.4285715, "baseScore": 6, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0018", "controlID": "C-0018", "name": "Configured readiness probe", "ruleReports": [{"name": "configured-readiness-probe", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].readinessProbe", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "configured-readiness-probe"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Ensure Readiness probes are configured wherever possible.", "description": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured.", "score": 0.71428573, "baseScore": 3, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0007", "controlID": "C-0007", "name": "Data Destruction", "ruleReports": [{"name": "rule-excessive-delete-rights-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle and minimize the number of subjects that can delete resources.", "description": "Attackers may attempt to destroy data and resources in the cluster. This includes deleting deployments, configurations, storage, and compute resources. This control identifies all subjects that can delete resources.", "score": 8.333333, "baseScore": 10, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0046", "controlID": "C-0046", "name": "Insecure capabilities", "ruleReports": [{"name": "insecure-capabilities", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set"], "totalResources": 140, "failedResources": 13, "warningResources": 0}], "remediation": "Remove all insecure capabilities which aren\u2019t necessary for the container.", "description": "Giving insecure or excsessive capabilities to a container can increase the impact of the container compromise. This control identifies all the PODs with dangerous capabilities (see documentation pages for details).", "score": 9.285714, "baseScore": 5, "totalResources": 140, "failedResources": 13, "warningResources": 0}, {"guid": "", "id": "C-0060", "controlID": "C-0060", "name": "Namespace without service accounts", "ruleReports": [{"name": "namespace-without-service-account", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "namespace-without-service-account"}], "listInputIDs": ["/v1/kalm-benchmark/ServiceAccount/pod-024-2-usage-of-bin-ksh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-036-keep-default-capabilities-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-21-using-insecure-capability-sys-rawio-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-001-no-readinessprobe-dedicated-sa", "/v1/np-005-network-policy-refers-no-valid-workload/ServiceAccount/np-005-network-policy-refers-no-valid-workload-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-5-use-runasnonroot-flag-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-016-no-podsecuritycontext-defined-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-2-has-hostipc-set-dedicated-sa", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-1-using-insecure-capability-audit-write-dedicated-sa", "/v1/kube-public/ServiceAccount/ns-002-2-place-pod-in-kube-public-dedicated-sa", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-001-2-no-memory-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-6-using-insecure-capability-fsetid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-5-using-insecure-capability-fowner-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-043-1-mount-azure-cloud-credentials-dedicated-sa", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/kalm-benchmark/ServiceAccount/pod-022-1-linux-is-not-hardened-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-3-no-explicit-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-2-allowed-privilege-escalation-explicitly-dedicated-sa", "/v1/default/ServiceAccount/ns-001-use-default-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-8-using-insecure-capability-mac-override-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-1-allowed-privilege-escalation-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-5-automount-pod-and-sa-dedicated-sa", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/kalm-benchmark/ServiceAccount/pod-042-1-volume-with-read-only-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-001-1-default-memory-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-3-default-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-4-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-004-1-default-cpu-limits-from-namespace-dedicated-sa", "/v1/res-008-1-no-default-memory-request-for-namespace/ServiceAccount/res-008-1-no-default-memory-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-1-default-to-root-group-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-034-3-using-dangerous-capability-net-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-2-only-nodeaffinity-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time-dedicated-sa", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/kalm-benchmark/ServiceAccount/pod-010-2-has-hostnetwork-set-dedicated-sa", "/v1/res-008-2-no-default-memory-limits-for-namespace/ServiceAccount/res-008-2-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-14-using-insecure-capability-setfcap-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-006-2-no-ephemeral-storage-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-1-use-no-hostipc-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-2-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-4-using-insecure-capability-dac-overrides-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-3-usage-of-bin-tcsh-in-container-dedicated-sa", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/kalm-benchmark/ServiceAccount/sc-002-2-using-latest-image-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-9-no-automount-pod-and-sa-dedicated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/res-008-3-no-default-memory-limits-for-namespace/ServiceAccount/res-008-3-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-3-runasnonroot-is-optional-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-030-no-securitycontext-defined-dedicated-sa", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-033-1-root-fs-is-writeable-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-1-use-no-hostnetwork-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-2-mounting-docker-directory-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-7-using-insecure-capability-kill-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-1-default-pod-and-sa-dedicated-sa", "/v1/np-004-network-policy-allows-access-to-kubelet/ServiceAccount/np-004-network-policy-allows-access-to-kubelet-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-3-use-gid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-4-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-002-2-no-memory-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-3-volume-with-writeable-hostpath-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-3-only-nodeselector-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-011-uses-hostport-dedicated-sa", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-003-7-no-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-13-using-insecure-capability-perfmon-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-1-default-to-root-user-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-3-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/res-007-3-no-cpu-limits-for-namespace/ServiceAccount/res-007-3-no-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-6-automount-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-20-using-insecure-capability-sys-module-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-10-using-insecure-capability-mknod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-1-non-privileged-container-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-2-using-insecure-capability-bpf-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-5-usage-of-usr-bin-scsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-12-using-insecure-capability-net-raw-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes-dedicated-sa", "/v1/np-002-2-only-egress-is-blocked/ServiceAccount/np-002-2-only-egress-is-blocked-filler-dedicated-sa", "/v1//Namespace/kalm-benchmark", "/v1/kalm-benchmark/ServiceAccount/wl-001-naked-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-1-tag-instead-of-digest-is-fine-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rbac-016-ronin-sa", "/v1/kalm-benchmark/ServiceAccount/pod-025-sensitive-key-referenced-in-environment-variable-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-18-using-insecure-capability-sys-boot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-15-using-insecure-capability-setgid-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/ServiceAccount/res-009-1-no-resource-quota-applied-to-namespace-filler-dedicated-sa", "/v1/res-007-2-no-default-cpu-limits-for-namespace/ServiceAccount/res-007-2-no-default-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-5-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-012-use-hostaliases-to-modify-pods--etc-hosts-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-6-usage-of-bin-csh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-0-using-sysctl-kernel.shm-rmid-forced-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-1-usage-of-sbin-sh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-9-set-runasnonroot-not-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-2-root-fs-is-explicitly-writeable-dedicated-sa", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-22-using-insecure-capability-sys-ptrace-dedicated-sa", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-017-7-use-root-user-on-container-dedicated-sa", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/kalm-benchmark/ServiceAccount/pod-019-2-use-gid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-005-1-default-ephemeral-storage-requests-from-namespace-dedicated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/ServiceAccount/np-003-network-policy-allows-access-to-cloud-metadata-api-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-002-1-default-memory-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-8-usage-of-usr-bin-busybox-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-2-volume-with-writeable-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-17-using-insecure-capability-setuid-dedicated-sa", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/kalm-benchmark/ServiceAccount/pod-034-2-using-dangerous-capability-sys-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-1-using-dangerous-capability-all-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-3-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-3-using-insecure-capability-chown-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-008-1-use-no-hostpid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-1-imagepullpolicy-defaults-to-always-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-2-privileged-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-045-containing-cve-2021-25741-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-003-no-priorityclass-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-2-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-4-use-root-user-in-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-2-use-runasnonroot-flag-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-2-use-uid-between-1k-10k-on-pod-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-024-7-usage-of-bin-busybox-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-2-default-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-1-no-node-selection-specified-dedicated-sa", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-008-2-pod-has-hostpid-set-dedicated-sa", "/v1/res-007-1-no-default-cpu-request-for-namespace/ServiceAccount/res-007-1-no-default-cpu-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-16-using-insecure-capability-setpcap-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-014-no-apparmor-profile-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-11-using-insecure-capability-net-bind-service-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-9-using-insecure-capability-mac-admin-dedicated-sa", "/v1/kube-system/ServiceAccount/ns-002-1-place-pod-in-kube-system-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/deprecated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-005-2-no-ephemeral-storage-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-3-use-uid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-002-no-livenessprobe-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-006-1-default-ephemeral-storage-limits-from-namespace-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/ServiceAccount/res-007-0-no-limitrange-object-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-8-set-runasnonroot-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-4-usage-of-bin-zsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-19-using-insecure-capability-sys-chroot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-023-no-seccomp-profile-defined-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-4-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-003-1-default-cpu-requests-from-namespace-dedicated-sa", "/v1/np-002-1-only-ingress-is-blocked/ServiceAccount/np-002-1-only-ingress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-0-usage-of-bin-bash-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-1-default-to-root-user-dedicated-sa", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/ServiceAccount/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-5-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-6-runasnonroot-is-optional-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-1-mounting-docker-socket-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-004-2-no-cpu-limits-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-003-2-no-cpu-requests-dedicated-sa"], "totalResources": 156, "failedResources": 1, "warningResources": 0}], "remediation": "Assign explicit service account to every namespace. Reduce RBAC capabilities of such service account to a minimum. Don't allow even read permissions unless it is absolutely necessary.", "description": "It is recommended not to use default service account anywhere in production environment. This control identifies all namespaces without explicit non-default service account.", "score": 0.64102566, "baseScore": 4, "totalResources": 156, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0015", "controlID": "C-0015", "name": "List Kubernetes secrets", "ruleReports": [{"name": "rule-can-list-get-secrets-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Monitor and approve list of users, groups and service accounts that can access secrets. Use exception mechanism to prevent repetitive the notifications.", "description": "Attackers who have permissions to access secrets can access sensitive information that might include credentials to various services. This control determines which user, group or service account can list/get secrets.", "score": 8.333333, "baseScore": 7, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0017", "controlID": "C-0017", "name": "Immutable container filesystem", "ruleReports": [{"name": "immutable-container-filesystem", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Set the filesystem of the container to read-only when possible (POD securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.", "description": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks.", "score": 1.4285715, "baseScore": 3, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0041", "controlID": "C-0041", "name": "HostNetwork access", "ruleReports": [{"name": "host-network-access", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostNetwork"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-network-access"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Only connect PODs to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those PODs that must have access to host network by design.", "description": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled.", "score": 0.71428573, "baseScore": 5, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0065", "controlID": "C-0065", "name": "No impersonation", "ruleReports": [{"name": "rule-can-impersonate-users-groups-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Either remove the impersonate verb from the role where it was found or make sure that this role is not bound to users, groups or service accounts used for ongoing cluster operations. If necessary, bind this role to a subject only for specific needs for limited time period.", "description": "Impersonation is an explicit RBAC permission to use other roles rather than the one assigned to a user, group or service account. This is sometimes needed for testing purposes. However, it is highly recommended not to use this capability in the production environments for daily operations. This control identifies all subjects whose roles include impersonate verb.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0085", "controlID": "C-0085", "name": "Workloads with excessive amount of vulnerabilities", "ruleReports": [], "remediation": "Update your workload images as soon as possible when fixes become available.", "description": "Container images with multiple Critical and High sevirity vulnerabilities increase the risk of potential exploit. This control lists all such images according to the threashold provided by the customer.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0062", "controlID": "C-0062", "name": "Sudo in container entrypoint", "ruleReports": [{"name": "sudo-in-container-entrypoint", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Remove sudo from the command line and use Kubernetes native root and capabilities controls to provide necessary privileges where they are required.", "description": "Adding sudo to a container entry point command may escalate process privileges and allow access to forbidden resources. This control checks all the entry point commands in all containers in the POD to find those that have sudo command.", "score": 0.71428573, "baseScore": 7, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0042", "controlID": "C-0042", "name": "SSH server running inside container", "ruleReports": [], "remediation": "Remove SSH from the container image or limit the access to the SSH server using network policies.", "description": "An SSH server that is running inside a container may be used by attackers to get remote access to the container. This control checks if pods have an open SSH port (22/2222).", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0073", "controlID": "C-0073", "name": "Naked PODs", "ruleReports": [{"name": "naked-pods", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.ownerReferences", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "naked-pods"}], "listInputIDs": ["/v1/kalm-benchmark/Pod/wl-001-naked-pod"], "totalResources": 1, "failedResources": 1, "warningResources": 0}], "remediation": "Create necessary Deployment object for every POD making any POD a first class citizen in your IaC architecture.", "description": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object.", "score": 100, "baseScore": 3, "totalResources": 1, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0054", "controlID": "C-0054", "name": "Cluster internal networking", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1//Namespace/kalm-benchmark"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define Kubernetes network policies or use alternative products to protect cluster network.", "description": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0079", "controlID": "C-0079", "name": "CVE-2022-0185-linux-kernel-container-escape", "ruleReports": [], "remediation": "Patch Linux kernel version to 5.16.2 or above", "description": "CVE-2022-0185 is a kernel vulnerability enabling privilege escalation and it can lead attackers to escape containers and take control over nodes. This control alerts on vulnerable kernel versions of Kubernetes nodes", "score": 4, "baseScore": 4, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0004", "controlID": "C-0004", "name": "Resources memory limit and request", "ruleReports": [{"name": "resources-memory-limit-and-request", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-memory-limit-and-request"}], "listInputIDs": ["apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Set the memory limit or use exception mechanism to avoid unnecessary notifications.", "description": "This control identifies all Pods for which the memory limit is not set.", "score": 2.857143, "baseScore": 7, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0081", "controlID": "C-0081", "name": "CVE-2022-24348-argocddirtraversal", "ruleReports": [], "remediation": "Update your ArgoCD deployment to fixed versions (v2.1.9,v2.2.4 or v2.3.0)", "description": "CVE-2022-24348 is a major software supply chain 0-day vulnerability in the popular open source CD platform Argo CD which can lead to privilege escalation and information disclosure.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0057", "controlID": "C-0057", "name": "Privileged container", "ruleReports": [{"name": "rule-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.privileged"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.", "description": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0020", "controlID": "C-0020", "name": "Mount service principal", "ruleReports": [{"name": "alert-any-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened"], "totalResources": 140, "failedResources": 6, "warningResources": 0}], "remediation": "Refrain from using host path mount.", "description": "When a cluster is deployed in the cloud, in some cases attackers can leverage their access to a container in the cluster to gain cloud credentials. This control determines if any workload contains a hostPath volume.", "score": 4.285714, "baseScore": 4, "totalResources": 140, "failedResources": 6, "warningResources": 0}, {"guid": "", "id": "C-0016", "controlID": "C-0016", "name": "Allow privilege escalation", "ruleReports": [{"name": "rule-allow-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-3-don-t-allow-root-users-in-pods", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-2-not-confining-apparmor", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-1-allow-pods-sharing-hostipc-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-2-not-confining-seccomp", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-2-allow-pods-sharing-host-network-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-1-allow-all-host-paths-by-default", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-2-allow-root-users-in-pods-uid-range", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-012-not-configuring-se-linux", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-2-allow-privilege-escalation-in-containers-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-1-allow-privileged-containers", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-2-allow-pods-sharing-hostipc-namespace-by-default", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-1-allow-root-users-in-pods", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-2-allow-root-groups-in-pods-may-gid-range", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-4-allow-root-groups-in-pods-must-higher-gid", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-1-allow-privilege-escalation-in-containers", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-010-not-dropping-all-capabilities", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-3-not-restricting-allowed-apparmor-profiles", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-1-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-1-not-configuring-apparmor-by-default", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-3-allow-root-groups-in-pods-may-higher-gid", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-1-allow-root-groups-in-pods-must-gid-range", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-3-not-restricting-allowed-seccomp-profiles", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-2-allow-privileged-containers-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-009-allowing-net-raw", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-3-disallow-all-host-paths-properly", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-2-allow-all-host-paths-naive-specification", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-2-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-1-not-configuring-seccomp-by-default", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-2-allow-pods-sharing-hostpid-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-1-allow-pods-sharing-host-network", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-1-allow-pods-sharing-hostpid"], "totalResources": 171, "failedResources": 3, "warningResources": 0}], "remediation": "If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.", "description": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities.", "score": 1.754386, "baseScore": 6, "totalResources": 171, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0068", "controlID": "C-0068", "name": "PSP enabled", "ruleReports": [], "remediation": "Turn Pod Security Policies on in your cluster, if you use other admission controllers to control the behavior that PSP controls, exclude this control from your scans", "description": "PSP enable fine-grained authorization of pod creation and it is important to enable it", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0061", "controlID": "C-0061", "name": "Pods in default namespace", "ruleReports": [{"name": "pods-in-default-namespace", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["metadata.namespace"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "pods-in-default-namespace"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Create necessary namespaces and move all the PODs from default namespace there.", "description": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace.", "score": 0.71428573, "baseScore": 3, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0056", "controlID": "C-0056", "name": "Configured liveness probe", "ruleReports": [{"name": "configured-liveness-probe", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].livenessProbe", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "configured-liveness-probe"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Ensure Liveness probes are configured wherever possible.", "description": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0009", "controlID": "C-0009", "name": "Resource policies", "ruleReports": [{"name": "resource-policies", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}], "listInputIDs": ["apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Define LimitRange and Resource Limits in the namespace or in the deployment/POD yamls.", "description": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control.", "score": 2.857143, "baseScore": 2, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0087", "controlID": "C-0087", "name": "CVE-2022-23648-containerd-fs-escape", "ruleReports": [], "remediation": "Patch containerd to 1.6.1, 1.5.10, 1.4.12  or above", "description": "CVE-2022-23648 is a vulnerability of containerd enabling attacker to gain access to read-only copies of arbitrary files from the host using aspecially-crafted POD configuration yamls", "score": 7, "baseScore": 7, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0083", "controlID": "C-0083", "name": "Workloads with Critical vulnerabilities exposed to external traffic", "ruleReports": [], "remediation": "Either update the container image to fix the vulnerabilities (if such fix is available) or reassess if this workload must be exposed to the outseide traffic. If no fix is available, consider periodic restart of the POD to minimize the risk of persistant intrusion. Use exception mechanism if you don't want to see this report again.", "description": "Container images with known critical vulnerabilities pose elevated risk if they are exposed to the external traffic. This control lists all images with such vulnerabilities if either LoadBalancer or NodePort service is assigned to them.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0039", "controlID": "C-0039", "name": "Malicious admission controller (mutating)", "ruleReports": [], "remediation": "Ensure all the webhooks are necessary. Use exception mechanism to prevent repititive notifications.", "description": "Attackers may use mutating webhooks to intercept and modify all the resources in the cluster. This control lists all mutating webhook configurations that must be verified.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0044", "controlID": "C-0044", "name": "Container hostPort", "ruleReports": [{"name": "container-hostPort", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].ports[0].hostPort"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-hostPort"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead.", "description": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0059", "controlID": "C-0059", "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability", "ruleReports": [], "remediation": "To mitigate this vulnerability: 1. Upgrade to a version that allows mitigation (>= v0.49.1 or >= v1.0.1), 2. Set allow-snippet-annotations to false in your ingress-nginx ConfigMap based on how you deploy ingress-nginx", "description": "Security issue in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster (see more at https://github.com/kubernetes/ingress-nginx/issues/7837)", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0013", "controlID": "C-0013", "name": "Non-root containers", "ruleReports": [{"name": "non-root-containers", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.securityContext.runAsNonRoot", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts"], "totalResources": 140, "failedResources": 7, "warningResources": 0}], "remediation": "If your application does not need root privileges, make sure to define the runAsUser or runAsGroup under the PodSecurityContext and use user ID 1000 or higher. Do not turn on allowPrivlegeEscalation bit and make sure runAsNonRoot is true.", "description": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root.", "score": 5, "baseScore": 6, "totalResources": 140, "failedResources": 7, "warningResources": 0}, {"guid": "", "id": "C-0050", "controlID": "C-0050", "name": "Resources CPU limit and request", "ruleReports": [{"name": "resources-cpu-limit-and-request", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-cpu-limit-and-request"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Set the CPU limit or use exception mechanism to avoid unnecessary notifications.", "description": "This control identifies all Pods for which the CPU limit is not set.", "score": 2.857143, "baseScore": 7, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0075", "controlID": "C-0075", "name": "Image pull policy on latest tag", "ruleReports": [{"name": "image-pull-policy-is-not-set-to-always", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Set ImagePullPolicy to Always in all PODs found by this control.", "description": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always.", "score": 0.71428573, "baseScore": 2, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0001", "controlID": "C-0001", "name": "Forbidden Container Registries", "ruleReports": [{"name": "rule-identify-blocklisted-image-registries", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "Limit the registries from which you pull container images from", "description": "In cases where the Kubernetes cluster is provided by a CSP (e.g., AKS in Azure, GKE in GCP, or EKS in AWS), compromised cloud credential can lead to the cluster takeover. Attackers may abuse cloud account credentials or IAM mechanism to the cluster\u2019s management layer.", "score": 100, "baseScore": 6, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"guid": "", "id": "C-0045", "controlID": "C-0045", "name": "Writable hostPath mount", "ruleReports": [{"name": "alert-rw-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].volumeMounts[0].readOnly"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].volumeMounts[0].readOnly", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Refrain from using the hostPath mount or use the exception mechanism to remove unnecessary notifications.", "description": "Mounting host directory to the container can be used by attackers to get access to the underlying host and gain persistence.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0036", "controlID": "C-0036", "name": "Malicious admission controller (validating)", "ruleReports": [], "remediation": "Ensure all the webhooks are necessary. Use exception mechanism to prevent repititive notifications.", "description": "Attackers can use validating webhooks to intercept and discover all the resources in the cluster. This control lists all the validating webhook configurations that must be verified.", "score": 7, "baseScore": 7, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0055", "controlID": "C-0055", "name": "Linux hardening", "ruleReports": [{"name": "linux-hardening", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.", "description": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0048", "controlID": "C-0048", "name": "HostPath mount", "ruleReports": [{"name": "alert-any-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-any-hostpath"}], "listInputIDs": ["apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa"], "totalResources": 140, "failedResources": 6, "warningResources": 0}], "remediation": "Remove hostPath mounts unless they are absolutely necessary and use exception mechanism to remove notifications.", "description": "Mounting host directory to the container can be used by attackers to get access to the underlying host. This control identifies all the PODs using hostPath mount.", "score": 4.285714, "baseScore": 6, "totalResources": 140, "failedResources": 6, "warningResources": 0}, {"guid": "", "id": "C-0038", "controlID": "C-0038", "name": "Host PID/IPC privileges", "ruleReports": [{"name": "host-pid-ipc-privileges", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostPID"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.hostIPC"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove hostPID and hostIPC from the yaml file(s) privileges unless they are absolutely necessary.", "description": "Containers should be isolated from the host machine as much as possible. The hostPID and hostIPC fields in deployment yaml may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions. This control identifies all PODs using hostPID or hostIPC privileges.", "score": 1.4285715, "baseScore": 5, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0031", "controlID": "C-0031", "name": "Delete Kubernetes events", "ruleReports": [{"name": "rule-can-delete-k8s-events-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle. Minimize the number of subjects who can delete Kubernetes events. Avoid using these subjects in the daily operations.", "description": "Attackers may delete Kubernetes events to avoid detection of their activity in the cluster. This control identifies all the subjects that can delete Kubernetes events.", "score": 8.333333, "baseScore": 4, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0030", "controlID": "C-0030", "name": "Ingress and Egress blocked", "ruleReports": [{"name": "ingress-and-egress-blocked", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}], "listInputIDs": ["networking.k8s.io/v1/res-007-2-no-default-cpu-limits-for-namespace/NetworkPolicy/res-007-2-no-default-cpu-limits-for-namespace", "networking.k8s.io/v1/np-005-network-policy-refers-no-valid-workload/NetworkPolicy/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "networking.k8s.io/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/NetworkPolicy/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "networking.k8s.io/v1/res-009-1-no-resource-quota-applied-to-namespace/NetworkPolicy/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "networking.k8s.io/v1/res-007-0-no-limitrange-object-for-namespace/NetworkPolicy/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "networking.k8s.io/v1/res-007-1-no-default-cpu-request-for-namespace/NetworkPolicy/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "networking.k8s.io/v1/np-002-1-only-ingress-is-blocked/NetworkPolicy/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "networking.k8s.io/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/NetworkPolicy/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "networking.k8s.io/v1/np-002-2-only-egress-is-blocked/NetworkPolicy/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark-unrestricted-ns", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "networking.k8s.io/v1/res-007-3-no-cpu-limits-for-namespace/NetworkPolicy/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "networking.k8s.io/v1/np-004-network-policy-allows-access-to-kubelet/NetworkPolicy/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "networking.k8s.io/v1/res-008-2-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "networking.k8s.io/v1/res-008-1-no-default-memory-request-for-namespace/NetworkPolicy/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "networking.k8s.io/v1/res-008-3-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough"], "totalResources": 156, "failedResources": 130, "warningResources": 0}], "remediation": "Define a network policy that restricts ingress and egress connections.", "description": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with.", "score": 83.333336, "baseScore": 6, "totalResources": 156, "failedResources": 130, "warningResources": 0}, {"guid": "", "id": "C-0076", "controlID": "C-0076", "name": "Label usage for resources", "ruleReports": [{"name": "label-usage-for-resources", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}], "listInputIDs": ["apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "Define labels that are most suitable to your needs of use the exceptions to prevent further notifications.", "description": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels.", "score": 100, "baseScore": 2, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"guid": "", "id": "C-0088", "controlID": "C-0088", "name": "RBAC enabled", "ruleReports": [], "remediation": "Enable RBAC either in the API server configuration or with the Kubernetes provider API", "description": "RBAC is the most advanced and well accepted mode of authorizing users of the Kubernetes API", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0012", "controlID": "C-0012", "name": "Applications credentials in configuration files", "ruleReports": [{"name": "rule-credentials-in-env-var", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].env[0].name", "spec.template.spec.containers[0].env[1].name", "spec.template.spec.containers[0].env[2].name", "spec.template.spec.containers[0].env[3].name", "spec.template.spec.containers[0].env[4].name", "spec.template.spec.containers[0].env[5].name", "spec.template.spec.containers[0].env[6].name", "spec.template.spec.containers[0].env[7].name", "spec.template.spec.containers[0].env[8].name", "spec.template.spec.containers[0].env[9].name", "spec.template.spec.containers[0].env[10].name", "spec.template.spec.containers[0].env[11].name", "spec.template.spec.containers[0].env[12].name", "spec.template.spec.containers[0].env[13].name"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-in-env-var"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable"], "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"name": "rule-credentials-configmap", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["data[aws_access_key_id]", "data[aws_secret_access_key]", "data[azure_batchai_storage_account]", "data[azure_batchai_storage_key]", "data[azure_batch_account]", "data[azure_batch_key]", "data[secret]", "data[key]", "data[password]", "data[pwd]", "data[token]", "data[jwt]", "data[bearer]", "data[credential]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "data": {"aws_access_key_id": "XXXXXX", "aws_secret_access_key": "XXXXXX", "azure_batch_account": "XXXXXX", "azure_batch_key": "XXXXXX", "azure_batchai_storage_account": "XXXXXX", "azure_batchai_storage_key": "XXXXXX", "bearer": "XXXXXX", "credential": "XXXXXX", "jwt": "XXXXXX", "key": "XXXXXX", "password": "XXXXXX", "pwd": "XXXXXX", "secret": "XXXXXX", "token": "XXXXXX"}, "kind": "ConfigMap", "metadata": {"annotations": {"check_path": ".data.aws_access_key_id|.data.aws_secret_access_key|.data.azure_batchai_storage_account|.data.azure_batchai_storage_key|.data.azure_batch_account|.data.azure_batch_key|.data.secret|.data.key|.data.password|.data.pwd|.data.token|.data.jwt|.data.bearer|.data.credential", "description": "Attackers can retrieve and use sensitive information provided via config maps", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "CM-001"}, "name": "cm-001-sensitive-key-referenced-in-configmap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-configmap"}], "listInputIDs": ["/v1/kalm-benchmark/ConfigMap/cm-001-sensitive-key-referenced-in-configmap"], "totalResources": 1, "failedResources": 1, "warningResources": 0}], "remediation": "Use Kubernetes secrets or Key Management Systems to store credentials.", "description": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration.", "score": 1.4184397, "baseScore": 8, "totalResources": 141, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0053", "controlID": "C-0053", "name": "Access container service account", "ruleReports": [], "remediation": "Verify that RBAC is enabled. Follow the least privilege principle and ensure that only necessary PODs have SA token mounted into them.", "description": "Attackers who obtain access to a pod can use its SA token to communicate with KubeAPI server. All PODs with SA token mounted (if such token has a Role or a ClusterRole binding) are considerred potentially dangerous.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0069", "controlID": "C-0069", "name": "Disable anonymous access to Kubelet service", "ruleReports": [], "remediation": "Start the kubelet with the --anonymous-auth=false flag.", "description": "By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of system:anonymous and a group of system:unauthenticated.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0086", "controlID": "C-0086", "name": "CVE-2022-0492-cgroups-container-escape", "ruleReports": [{"name": "CVE-2022-0492", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Activate AppArmor or SELinux. Follow the least privilege principle and remove root privileges or privilege escalation option and CAP_DAC_OVERRIDE capability. Make sure you don't allow container images from potentially dangerous sources and that containers that must have high privileges are taken from protected repositories.", "description": "Linux Kernel vulnerability CVE-2022-0492 may allow malicious code running inside container to escape container isolation and gain root privileges on the entire node. When fixed Kernel version numbers will become available, this control will be modified to verify them and avoid false positive detections. This control identifies all the resources that don't deploy neither AppArmor nor SELinux, run as root or allow privige escalation or have corresponding dangerous capabilities.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0014", "controlID": "C-0014", "name": "Access Kubernetes dashboard", "ruleReports": [{"name": "rule-access-dashboard-wl-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod"], "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"name": "rule-access-dashboard-subject-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Make sure that the \u201cKubernetes Dashboard\u201d service account is only bound to the Kubernetes dashboard following the least privilege principle.", "description": "Attackers who gain access to the dashboard service account or have its RBAC permissions can use its network access to retrieve information about resources in the cluster or change them. This control checks if a subject that is not dashboard service account is bound to dashboard role/clusterrole, or - if anyone that is not the dashboard pod is associated with dashboard service account.", "score": 0.65789473, "baseScore": 2, "totalResources": 152, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0063", "controlID": "C-0063", "name": "Portforwarding privileges", "ruleReports": [{"name": "rule-can-portforward-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl portforward\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant RBAC permission can use \u201ckubectl portforward\u201d command to establish direct communication with PODs from within the cluster or even remotely. Such communication will most likely bypass existing security measures in the cluster. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0037", "controlID": "C-0037", "name": "CoreDNS poisoning", "ruleReports": [{"name": "rule-can-update-configmap-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should follow the least privilege principle. Monitor and approve all the subjects allowed to modify the 'coredns' configmap. It is also recommended to remove this permission from the users/service accounts used in the daily operations.", "description": "If attackers have permissions to modify the coredns ConfigMap they can change the behavior of the cluster\u2019s DNS, poison it, and override the network identity of other services. This control identifies all subjects allowed to update the 'coredns' configmap.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0034", "controlID": "C-0034", "name": "Automatic mapping of service account", "ruleReports": [{"name": "automount-service-account", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RBAC-016"}, "name": "rbac-016-ronin-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}], "listInputIDs": ["/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/ServiceAccount/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "/v1/kalm-benchmark/ServiceAccount/pod-017-3-runasnonroot-is-optional-dedicated-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "/v1/kalm-benchmark/ServiceAccount/pod-035-1-using-insecure-capability-audit-write-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "/v1/kalm-benchmark/ServiceAccount/pod-035-4-using-insecure-capability-dac-overrides-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "/v1/kalm-benchmark/ServiceAccount/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-001-no-readinessprobe-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "/v1/kalm-benchmark/ServiceAccount/res-001-1-default-memory-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-3-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-1-default-to-root-user-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "/v1/kalm-benchmark/ServiceAccount/pod-035-11-using-insecure-capability-net-bind-service-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-18-using-insecure-capability-sys-boot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-003-1-default-cpu-requests-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "/v1/kalm-benchmark/ServiceAccount/pod-035-9-using-insecure-capability-mac-admin-dedicated-sa", "/v1/kube-system/ServiceAccount/ns-002-1-place-pod-in-kube-system-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-10-using-insecure-capability-mknod-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-002-2-no-memory-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-21-using-insecure-capability-sys-rawio-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-5-usage-of-usr-bin-scsh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "/v1/kalm-benchmark/ServiceAccount/pod-034-2-using-dangerous-capability-sys-admin-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "/v1/kalm-benchmark/ServiceAccount/pod-019-1-default-to-root-group-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "/v1/kalm-benchmark/ServiceAccount/pod-035-14-using-insecure-capability-setfcap-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-1-using-dangerous-capability-all-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-6-usage-of-bin-csh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-7-using-insecure-capability-kill-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "/v1/kalm-benchmark/ServiceAccount/pod-030-no-securitycontext-defined-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-006-1-default-ephemeral-storage-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-8-usage-of-usr-bin-busybox-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "/v1/np-002-2-only-egress-is-blocked/ServiceAccount/np-002-2-only-egress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-6-runasnonroot-is-optional-on-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "/v1/kalm-benchmark/ServiceAccount/pod-045-containing-cve-2021-25741-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-2-volume-with-writeable-hostpath-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "/v1/kalm-benchmark/ServiceAccount/pod-024-0-usage-of-bin-bash-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-1-default-pod-and-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "/v1/kalm-benchmark/ServiceAccount/pod-024-2-usage-of-bin-ksh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "/v1/res-007-1-no-default-cpu-request-for-namespace/ServiceAccount/res-007-1-no-default-cpu-request-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "/v1/kalm-benchmark/ServiceAccount/sc-002-1-tag-instead-of-digest-is-fine-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "/v1/kalm-benchmark/ServiceAccount/pod-024-4-usage-of-bin-zsh-in-container-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/ServiceAccount/res-009-1-no-resource-quota-applied-to-namespace-filler-dedicated-sa", "/v1/res-008-2-no-default-memory-limits-for-namespace/ServiceAccount/res-008-2-no-default-memory-limits-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "/v1/default/ServiceAccount/ns-001-use-default-namespace-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-005-2-no-ephemeral-storage-requests-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "/v1/kalm-benchmark/ServiceAccount/pod-018-3-use-uid-between-1k-10k-on-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "/v1/kalm-benchmark/ServiceAccount/wl-001-naked-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "/v1/kalm-benchmark/ServiceAccount/rbac-016-ronin-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-3-using-dangerous-capability-net-admin-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "/v1/kalm-benchmark/ServiceAccount/res-002-1-default-memory-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-002-no-livenessprobe-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-024-1-usage-of-sbin-sh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "/v1/kalm-benchmark/ServiceAccount/pod-036-keep-default-capabilities-dedicated-sa", "/v1/res-007-2-no-default-cpu-limits-for-namespace/ServiceAccount/res-007-2-no-default-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-005-1-default-ephemeral-storage-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-20-using-insecure-capability-sys-module-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "/v1/res-007-3-no-cpu-limits-for-namespace/ServiceAccount/res-007-3-no-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-2-only-nodeaffinity-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-1-volume-with-read-only-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-023-no-seccomp-profile-defined-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-3-default-pod-no-automount-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "/v1/kalm-benchmark/ServiceAccount/pod-017-1-default-to-root-user-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "/v1/np-005-network-policy-refers-no-valid-workload/ServiceAccount/np-005-network-policy-refers-no-valid-workload-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/deprecated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-3-using-insecure-capability-chown-dedicated-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-003-7-no-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-1-allowed-privilege-escalation-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-004-1-default-cpu-limits-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "/v1/kalm-benchmark/ServiceAccount/sc-001-3-no-proper-imagepullpolicy-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "/v1/kalm-benchmark/ServiceAccount/pod-010-2-has-hostnetwork-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "/v1/kalm-benchmark/ServiceAccount/pod-008-1-use-no-hostpid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-17-using-insecure-capability-setuid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-025-sensitive-key-referenced-in-environment-variable-dedicated-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-003-2-no-cpu-requests-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-8-using-insecure-capability-mac-override-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "/v1/kalm-benchmark/ServiceAccount/rel-004-1-no-node-selection-specified-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "/v1/kalm-benchmark/ServiceAccount/pod-022-2-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-014-no-apparmor-profile-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-3-volume-with-writeable-hostpath-by-default-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "/v1/np-002-1-only-ingress-is-blocked/ServiceAccount/np-002-1-only-ingress-is-blocked-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-033-1-root-fs-is-writeable-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-7-usage-of-bin-busybox-in-container-dedicated-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "/v1/kalm-benchmark/ServiceAccount/pod-035-15-using-insecure-capability-setgid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-1-linux-is-not-hardened-dedicated-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/ServiceAccount/rel-003-no-priorityclass-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-12-using-insecure-capability-net-raw-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-012-use-hostaliases-to-modify-pods--etc-hosts-dedicated-sa", "/v1/res-008-3-no-default-memory-limits-for-namespace/ServiceAccount/res-008-3-no-default-memory-limits-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "/v1/kalm-benchmark/ServiceAccount/pod-017-5-use-runasnonroot-flag-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-13-using-insecure-capability-perfmon-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-9-no-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "/v1/res-008-1-no-default-memory-request-for-namespace/ServiceAccount/res-008-1-no-default-memory-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-4-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-2-privileged-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-2-has-hostipc-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-019-5-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-7-use-root-user-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-011-uses-hostport-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-3-usage-of-bin-tcsh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "/v1/kalm-benchmark/ServiceAccount/pod-009-1-use-no-hostipc-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-5-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-2-mounting-docker-directory-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-5-using-insecure-capability-fowner-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "/v1/kalm-benchmark/ServiceAccount/pod-033-2-root-fs-is-explicitly-writeable-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-043-1-mount-azure-cloud-credentials-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "/v1/kalm-benchmark/ServiceAccount/pod-019-3-use-gid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-9-set-runasnonroot-not-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-016-no-podsecuritycontext-defined-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "/v1/kalm-benchmark/ServiceAccount/pod-010-1-use-no-hostnetwork-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-16-using-insecure-capability-setpcap-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-001-2-no-memory-requests-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "/v1/kalm-benchmark/ServiceAccount/pod-008-2-pod-has-hostpid-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "/v1/kalm-benchmark/ServiceAccount/sc-002-3-no-explicit-tag-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-006-2-no-ephemeral-storage-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-2-default-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-2-using-insecure-capability-bpf-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "/v1/kalm-benchmark/ServiceAccount/pod-035-19-using-insecure-capability-sys-chroot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-1-imagepullpolicy-defaults-to-always-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-3-only-nodeselector-is-enough-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "/v1/np-004-network-policy-allows-access-to-kubelet/ServiceAccount/np-004-network-policy-allows-access-to-kubelet-filler-dedicated-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-018-4-use-uid-set-in-container-takes-precedence-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "/v1/kalm-benchmark/ServiceAccount/pod-032-1-non-privileged-container-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-2-no-proper-imagepullpolicy-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "/v1/kalm-benchmark/ServiceAccount/pod-003-6-automount-pod-no-automount-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "/v1/kalm-benchmark/ServiceAccount/pod-017-2-use-runasnonroot-flag-on-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "/v1/kalm-benchmark/ServiceAccount/pod-035-6-using-insecure-capability-fsetid-dedicated-sa", "/v1/kube-public/ServiceAccount/ns-002-2-place-pod-in-kube-public-dedicated-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-018-5-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-004-2-no-cpu-limits-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "/v1/kalm-benchmark/ServiceAccount/pod-018-2-use-uid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-2-allowed-privilege-escalation-explicitly-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-0-using-sysctl-kernel.shm-rmid-forced-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-1-mounting-docker-socket-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/ServiceAccount/np-003-network-policy-allows-access-to-cloud-metadata-api-filler-dedicated-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "/v1/res-007-0-no-limitrange-object-for-namespace/ServiceAccount/res-007-0-no-limitrange-object-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-22-using-insecure-capability-sys-ptrace-dedicated-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "/v1/kalm-benchmark/ServiceAccount/pod-019-2-use-gid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-2-using-latest-image-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-8-set-runasnonroot-correctly-on-container-dedicated-sa", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "/v1/kalm-benchmark/ServiceAccount/pod-017-4-use-root-user-in-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "/v1/kalm-benchmark/ServiceAccount/pod-003-4-automount-pod-default-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced"], "totalResources": 279, "failedResources": 12, "warningResources": 0}], "remediation": "Disable automatic mounting of service account tokens to PODs either at the service account level or at the individual POD level, by specifying the automountServiceAccountToken: false. Note that POD level takes precedence.", "description": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them.", "score": 4.3010755, "baseScore": 5, "totalResources": 279, "failedResources": 12, "warningResources": 0}, {"guid": "", "id": "C-0067", "controlID": "C-0067", "name": "Audit logs enabled", "ruleReports": [], "remediation": "Turn on audit logging for your cluster. Look at the vendor guidelines for more details", "description": "Audit logging is an important security feature in Kubernetes, it enables the operator to track requests to the cluster. It is important to use it so the operator has a record of events happened in Kubernetes", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0033", "controlID": "C-0033", "name": "Access tiller endpoint", "ruleReports": [], "remediation": "Use version higher than 2 of Helm which doesn\u2019t use Tiller", "description": "Attackers may run code on any container that is accessible to the tiller\u2019s service and perform actions in the cluster, using the tiller\u2019s service account, which often has high privileges. This control checks if unauthenticated version of the Tiller runs in the cluster.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0070", "controlID": "C-0070", "name": "Enforce Kubelet client TLS authentication", "ruleReports": [], "remediation": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.", "description": "Kubelets are the node level orchestrator in Kubernetes control plane. They are publishing service port 10250 where they accept commands from API server. Operator must make sure that only API server is allowed to submit commands to Kubelet. This is done through client certificate verification, must configure Kubelet with client CA file to use for this purpose.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0049", "controlID": "C-0049", "name": "Network mapping", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1//Namespace/kalm-benchmark", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1//Namespace/kalm-benchmark-unrestricted-ns"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define network policies or use similar network protection mechanisms.", "description": "If no network policy is defined, attackers who gain access to a single container may use it to probe the network. This control lists all namespaces in which no network policies are defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0026", "controlID": "C-0026", "name": "Kubernetes CronJob", "ruleReports": [], "remediation": "Watch Kubernetes CronJobs and make sure they are legitimate.", "description": "Attackers may use Kubernetes CronJob for scheduling execution of malicious code that would run as a POD in the cluster. This control lists all the CronJobs that exist in the cluster for the user to approve.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0002", "controlID": "C-0002", "name": "Exec into container", "ruleReports": [{"name": "exec-into-container-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl exec\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant permissions can run malicious commands in the context of legitimate containers in the cluster using \u201ckubectl exec\u201d command. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0058", "controlID": "C-0058", "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.", "ruleReports": [], "remediation": "To mitigate this vulnerability without upgrading kubelet, you can disable the VolumeSubpath feature gate on kubelet and kube-apiserver, or remove any existing Pods using subPath or subPathExpr feature.", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0 - v1.22.1, v1.21.0 - v1.21.4, v1.20.0 - v1.20.10, version v1.19.14 and lower. This control checks the vulnerable versions and the actual usage of the subPath feature in all Pods in the cluster. If you want to learn more about the CVE, please refer to the CVE link: https://nvd.nist.gov/vuln/detail/CVE-2021-25741", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0021", "controlID": "C-0021", "name": "Exposed sensitive interfaces", "ruleReports": [], "remediation": "Consider blocking external interfaces or protect them with appropriate security tools.", "description": "Exposing a sensitive interface to the internet poses a security risk. It might enable attackers to run malicious code or deploy containers in the cluster. This control checks if known components (e.g. Kubeflow, Argo Workflows, etc.) are deployed and exposed services externally.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0074", "controlID": "C-0074", "name": "Containers mounting Docker socket", "ruleReports": [{"name": "containers-mounting-docker-socket", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "containers-mounting-docker-socket"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/default/Deployment/ns-001-use-default-namespace"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Remove docker socket mount request or define an exception.", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands, if Docker runtime is available. This control identifies PODs that attempt to mount Docker socket for accessing Docker runtime.", "score": 0.71428573, "baseScore": 5, "totalResources": 140, "failedResources": 1, "warningResources": 0}], "score": 13.983635, "wcsScore": 23220, "totalResources": 356, "failedResources": 152, "warningResources": 0}, {"name": "ArmoBest", "controlReports": [{"guid": "", "id": "C-0009", "controlID": "C-0009", "name": "Resource policies", "ruleReports": [{"name": "resource-policies", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}], "listInputIDs": ["apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Define LimitRange and Resource Limits in the namespace or in the deployment/POD yamls.", "description": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control.", "score": 2.857143, "baseScore": 2, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0030", "controlID": "C-0030", "name": "Ingress and Egress blocked", "ruleReports": [{"name": "ingress-and-egress-blocked", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "networking.k8s.io/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/NetworkPolicy/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "networking.k8s.io/v1/res-007-1-no-default-cpu-request-for-namespace/NetworkPolicy/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark-unrestricted-ns", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "networking.k8s.io/v1/res-007-3-no-cpu-limits-for-namespace/NetworkPolicy/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "networking.k8s.io/v1/res-008-3-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "networking.k8s.io/v1/res-007-2-no-default-cpu-limits-for-namespace/NetworkPolicy/res-007-2-no-default-cpu-limits-for-namespace", "networking.k8s.io/v1/res-009-1-no-resource-quota-applied-to-namespace/NetworkPolicy/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "networking.k8s.io/v1/np-002-1-only-ingress-is-blocked/NetworkPolicy/np-002-1-only-ingress-is-blocked", "networking.k8s.io/v1/np-005-network-policy-refers-no-valid-workload/NetworkPolicy/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "networking.k8s.io/v1/np-004-network-policy-allows-access-to-kubelet/NetworkPolicy/np-004-network-policy-allows-access-to-kubelet", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "networking.k8s.io/v1/res-008-1-no-default-memory-request-for-namespace/NetworkPolicy/res-008-1-no-default-memory-request-for-namespace", "networking.k8s.io/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/NetworkPolicy/np-003-network-policy-allows-access-to-cloud-metadata-api", "networking.k8s.io/v1/res-007-0-no-limitrange-object-for-namespace/NetworkPolicy/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark", "networking.k8s.io/v1/res-008-2-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-2-no-default-memory-limits-for-namespace", "networking.k8s.io/v1/np-002-2-only-egress-is-blocked/NetworkPolicy/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace"], "totalResources": 156, "failedResources": 130, "warningResources": 0}], "remediation": "Define a network policy that restricts ingress and egress connections.", "description": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with.", "score": 83.333336, "baseScore": 6, "totalResources": 156, "failedResources": 130, "warningResources": 0}, {"guid": "", "id": "C-0063", "controlID": "C-0063", "name": "Portforwarding privileges", "ruleReports": [{"name": "rule-can-portforward-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl portforward\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant RBAC permission can use \u201ckubectl portforward\u201d command to establish direct communication with PODs from within the cluster or even remotely. Such communication will most likely bypass existing security measures in the cluster. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0070", "controlID": "C-0070", "name": "Enforce Kubelet client TLS authentication", "ruleReports": [], "remediation": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.", "description": "Kubelets are the node level orchestrator in Kubernetes control plane. They are publishing service port 10250 where they accept commands from API server. Operator must make sure that only API server is allowed to submit commands to Kubelet. This is done through client certificate verification, must configure Kubelet with client CA file to use for this purpose.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0079", "controlID": "C-0079", "name": "CVE-2022-0185-linux-kernel-container-escape", "ruleReports": [], "remediation": "Patch Linux kernel version to 5.16.2 or above", "description": "CVE-2022-0185 is a kernel vulnerability enabling privilege escalation and it can lead attackers to escape containers and take control over nodes. This control alerts on vulnerable kernel versions of Kubernetes nodes", "score": 4, "baseScore": 4, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0006", "controlID": "C-0006", "name": "Allowed hostPath", "ruleReports": [{"name": "alert-rw-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].volumeMounts[0].readOnly"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].volumeMounts[0].readOnly", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Refrain from using host path mount.", "description": "Mounting host directory to the container can be abused to get access to sensitive data and gain persistence on the host machine.", "score": 1.4285715, "baseScore": 6, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0046", "controlID": "C-0046", "name": "Insecure capabilities", "ruleReports": [{"name": "insecure-capabilities", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace"], "totalResources": 140, "failedResources": 13, "warningResources": 0}], "remediation": "Remove all insecure capabilities which aren\u2019t necessary for the container.", "description": "Giving insecure or excsessive capabilities to a container can increase the impact of the container compromise. This control identifies all the PODs with dangerous capabilities (see documentation pages for details).", "score": 9.285714, "baseScore": 5, "totalResources": 140, "failedResources": 13, "warningResources": 0}, {"guid": "", "id": "C-0044", "controlID": "C-0044", "name": "Container hostPort", "ruleReports": [{"name": "container-hostPort", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].ports[0].hostPort"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-hostPort"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead.", "description": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0059", "controlID": "C-0059", "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability", "ruleReports": [], "remediation": "To mitigate this vulnerability: 1. Upgrade to a version that allows mitigation (>= v0.49.1 or >= v1.0.1), 2. Set allow-snippet-annotations to false in your ingress-nginx ConfigMap based on how you deploy ingress-nginx", "description": "Security issue in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster (see more at https://github.com/kubernetes/ingress-nginx/issues/7837)", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0085", "controlID": "C-0085", "name": "Workloads with excessive amount of vulnerabilities", "ruleReports": [], "remediation": "Update your workload images as soon as possible when fixes become available.", "description": "Container images with multiple Critical and High sevirity vulnerabilities increase the risk of potential exploit. This control lists all such images according to the threashold provided by the customer.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0057", "controlID": "C-0057", "name": "Privileged container", "ruleReports": [{"name": "rule-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.privileged"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}], "listInputIDs": ["apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.", "description": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0034", "controlID": "C-0034", "name": "Automatic mapping of service account", "ruleReports": [{"name": "automount-service-account", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RBAC-016"}, "name": "rbac-016-ronin-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}], "listInputIDs": ["/v1/kalm-benchmark/ServiceAccount/pod-035-9-using-insecure-capability-mac-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-2-mounting-docker-directory-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "/v1/kalm-benchmark/ServiceAccount/pod-022-3-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-6-automount-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-1-mounting-docker-socket-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-001-2-no-memory-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-9-no-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-030-no-securitycontext-defined-dedicated-sa", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/np-005-network-policy-refers-no-valid-workload/ServiceAccount/np-005-network-policy-refers-no-valid-workload-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "/v1/kalm-benchmark/ServiceAccount/pod-032-1-non-privileged-container-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-4-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "/v1/kalm-benchmark/ServiceAccount/pod-042-2-volume-with-writeable-hostpath-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "/v1/kalm-benchmark/ServiceAccount/pod-035-11-using-insecure-capability-net-bind-service-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-036-keep-default-capabilities-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-3-using-insecure-capability-chown-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-003-2-no-cpu-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rbac-016-ronin-sa", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "/v1/kalm-benchmark/ServiceAccount/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-008-2-pod-has-hostpid-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "/v1/res-008-1-no-default-memory-request-for-namespace/ServiceAccount/res-008-1-no-default-memory-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-043-1-mount-azure-cloud-credentials-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "/v1/kalm-benchmark/ServiceAccount/pod-024-1-usage-of-sbin-sh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-4-use-root-user-in-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "/v1/kalm-benchmark/ServiceAccount/pod-042-3-volume-with-writeable-hostpath-by-default-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-5-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-17-using-insecure-capability-setuid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-3-usage-of-bin-tcsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-1-using-insecure-capability-audit-write-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "/v1/kalm-benchmark/ServiceAccount/pod-018-2-use-uid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-004-2-no-cpu-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-1-tag-instead-of-digest-is-fine-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-005-2-no-ephemeral-storage-requests-dedicated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/ServiceAccount/np-003-network-policy-allows-access-to-cloud-metadata-api-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-21-using-insecure-capability-sys-rawio-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-003-1-default-cpu-requests-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "/v1/kalm-benchmark/ServiceAccount/deprecated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "/v1/kube-public/ServiceAccount/ns-002-2-place-pod-in-kube-public-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "/v1/kalm-benchmark/ServiceAccount/rel-004-1-no-node-selection-specified-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-1-linux-is-not-hardened-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "/v1/kalm-benchmark/ServiceAccount/pod-019-5-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-2-has-hostnetwork-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "/v1/kalm-benchmark/ServiceAccount/pod-035-8-using-insecure-capability-mac-override-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-7-usage-of-bin-busybox-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "/v1/kalm-benchmark/ServiceAccount/pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "/v1/kalm-benchmark/ServiceAccount/pod-009-2-has-hostipc-set-dedicated-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "/v1/kalm-benchmark/ServiceAccount/pod-022-2-one-approach-to-hardening-linux-is-enough-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "/v1/kalm-benchmark/ServiceAccount/pod-035-5-using-insecure-capability-fowner-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-9-set-runasnonroot-not-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-2-default-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-1-using-dangerous-capability-all-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-001-no-readinessprobe-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "/v1/kalm-benchmark/ServiceAccount/pod-031-2-allowed-privilege-escalation-explicitly-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-1-root-fs-is-writeable-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-025-sensitive-key-referenced-in-environment-variable-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-035-10-using-insecure-capability-mknod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "/v1/res-008-2-no-default-memory-limits-for-namespace/ServiceAccount/res-008-2-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-3-use-uid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-023-no-seccomp-profile-defined-dedicated-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/res-006-1-default-ephemeral-storage-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-7-no-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-2-use-runasnonroot-flag-on-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "/v1/kalm-benchmark/ServiceAccount/pod-035-4-using-insecure-capability-dac-overrides-dedicated-sa", "/v1/np-002-1-only-ingress-is-blocked/ServiceAccount/np-002-1-only-ingress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-6-using-insecure-capability-fsetid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-3-use-gid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-5-use-runasnonroot-flag-on-container-dedicated-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "/v1/kalm-benchmark/ServiceAccount/pod-024-8-usage-of-usr-bin-busybox-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-1-volume-with-read-only-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-1-use-no-hostipc-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-1-use-no-hostnetwork-dedicated-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "/v1/kalm-benchmark/ServiceAccount/pod-035-18-using-insecure-capability-sys-boot-dedicated-sa", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/ServiceAccount/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "/v1/np-002-2-only-egress-is-blocked/ServiceAccount/np-002-2-only-egress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-002-2-no-memory-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-0-using-sysctl-kernel.shm-rmid-forced-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-3-using-dangerous-capability-net-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-13-using-insecure-capability-perfmon-dedicated-sa", "/v1/default/ServiceAccount/ns-001-use-default-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-2-using-latest-image-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-5-automount-pod-and-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "/v1/np-004-network-policy-allows-access-to-kubelet/ServiceAccount/np-004-network-policy-allows-access-to-kubelet-filler-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-006-2-no-ephemeral-storage-limits-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "/v1/kalm-benchmark/ServiceAccount/wl-001-naked-pod-dedicated-sa", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "/v1/kalm-benchmark/ServiceAccount/pod-035-22-using-insecure-capability-sys-ptrace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "/v1/kalm-benchmark/ServiceAccount/pod-017-6-runasnonroot-is-optional-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-14-using-insecure-capability-setfcap-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "/v1/kalm-benchmark/ServiceAccount/pod-024-2-usage-of-bin-ksh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-2-only-nodeaffinity-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-3-runasnonroot-is-optional-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "/v1/kalm-benchmark/ServiceAccount/pod-003-3-default-pod-no-automount-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "/v1/kalm-benchmark/ServiceAccount/res-004-1-default-cpu-limits-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "/v1/kalm-benchmark/ServiceAccount/pod-014-no-apparmor-profile-dedicated-sa", "/v1/res-007-3-no-cpu-limits-for-namespace/ServiceAccount/res-007-3-no-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-4-usage-of-bin-zsh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "/v1/kalm-benchmark/ServiceAccount/sc-001-2-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-011-uses-hostport-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-1-imagepullpolicy-defaults-to-always-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-2-privileged-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-1-default-to-root-user-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/ServiceAccount/res-007-0-no-limitrange-object-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-2-using-insecure-capability-bpf-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-012-use-hostaliases-to-modify-pods--etc-hosts-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-2-root-fs-is-explicitly-writeable-dedicated-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-15-using-insecure-capability-setgid-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "/v1/kalm-benchmark/ServiceAccount/pod-024-5-usage-of-usr-bin-scsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-008-1-use-no-hostpid-dedicated-sa", "/v1/kube-system/ServiceAccount/ns-002-1-place-pod-in-kube-system-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-4-use-gid-set-in-container-takes-precedence-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "/v1/kalm-benchmark/ServiceAccount/rel-004-3-only-nodeselector-is-enough-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "/v1/kalm-benchmark/ServiceAccount/pod-017-1-default-to-root-user-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "/v1/kalm-benchmark/ServiceAccount/pod-035-12-using-insecure-capability-net-raw-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "/v1/kalm-benchmark/ServiceAccount/pod-019-2-use-gid-between-1k-10k-on-pod-dedicated-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-035-20-using-insecure-capability-sys-module-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/ServiceAccount/res-009-1-no-resource-quota-applied-to-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "/v1/kalm-benchmark/ServiceAccount/pod-017-8-set-runasnonroot-correctly-on-container-dedicated-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/ServiceAccount/rel-002-no-livenessprobe-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/default/Deployment/ns-001-use-default-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-034-2-using-dangerous-capability-sys-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-7-use-root-user-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-3-no-explicit-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-19-using-insecure-capability-sys-chroot-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "/v1/res-007-2-no-default-cpu-limits-for-namespace/ServiceAccount/res-007-2-no-default-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-1-default-to-root-group-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-016-no-podsecuritycontext-defined-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "/v1/kalm-benchmark/ServiceAccount/res-005-1-default-ephemeral-storage-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-001-1-default-memory-requests-from-namespace-dedicated-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "/v1/res-007-1-no-default-cpu-request-for-namespace/ServiceAccount/res-007-1-no-default-cpu-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-7-using-insecure-capability-kill-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-045-containing-cve-2021-25741-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "/v1/kalm-benchmark/ServiceAccount/pod-018-4-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-6-usage-of-bin-csh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-003-no-priorityclass-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "/v1/kalm-benchmark/ServiceAccount/sc-001-3-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-1-allowed-privilege-escalation-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-002-1-default-memory-limits-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "/v1/kalm-benchmark/ServiceAccount/pod-024-0-usage-of-bin-bash-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "/v1/res-008-3-no-default-memory-limits-for-namespace/ServiceAccount/res-008-3-no-default-memory-limits-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "/v1/kalm-benchmark/ServiceAccount/pod-003-1-default-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-16-using-insecure-capability-setpcap-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits"], "totalResources": 279, "failedResources": 12, "warningResources": 0}], "remediation": "Disable automatic mounting of service account tokens to PODs either at the service account level or at the individual POD level, by specifying the automountServiceAccountToken: false. Note that POD level takes precedence.", "description": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them.", "score": 4.3010755, "baseScore": 5, "totalResources": 279, "failedResources": 12, "warningResources": 0}, {"guid": "", "id": "C-0058", "controlID": "C-0058", "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.", "ruleReports": [], "remediation": "To mitigate this vulnerability without upgrading kubelet, you can disable the VolumeSubpath feature gate on kubelet and kube-apiserver, or remove any existing Pods using subPath or subPathExpr feature.", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0 - v1.22.1, v1.21.0 - v1.21.4, v1.20.0 - v1.20.10, version v1.19.14 and lower. This control checks the vulnerable versions and the actual usage of the subPath feature in all Pods in the cluster. If you want to learn more about the CVE, please refer to the CVE link: https://nvd.nist.gov/vuln/detail/CVE-2021-25741", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0001", "controlID": "C-0001", "name": "Forbidden Container Registries", "ruleReports": [{"name": "rule-identify-blocklisted-image-registries", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-identify-blocklisted-image-registries"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "Limit the registries from which you pull container images from", "description": "In cases where the Kubernetes cluster is provided by a CSP (e.g., AKS in Azure, GKE in GCP, or EKS in AWS), compromised cloud credential can lead to the cluster takeover. Attackers may abuse cloud account credentials or IAM mechanism to the cluster\u2019s management layer.", "score": 100, "baseScore": 6, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"guid": "", "id": "C-0083", "controlID": "C-0083", "name": "Workloads with Critical vulnerabilities exposed to external traffic", "ruleReports": [], "remediation": "Either update the container image to fix the vulnerabilities (if such fix is available) or reassess if this workload must be exposed to the outseide traffic. If no fix is available, consider periodic restart of the POD to minimize the risk of persistant intrusion. Use exception mechanism if you don't want to see this report again.", "description": "Container images with known critical vulnerabilities pose elevated risk if they are exposed to the external traffic. This control lists all images with such vulnerabilities if either LoadBalancer or NodePort service is assigned to them.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0012", "controlID": "C-0012", "name": "Applications credentials in configuration files", "ruleReports": [{"name": "rule-credentials-in-env-var", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].env[0].name", "spec.template.spec.containers[0].env[1].name", "spec.template.spec.containers[0].env[2].name", "spec.template.spec.containers[0].env[3].name", "spec.template.spec.containers[0].env[4].name", "spec.template.spec.containers[0].env[5].name", "spec.template.spec.containers[0].env[6].name", "spec.template.spec.containers[0].env[7].name", "spec.template.spec.containers[0].env[8].name", "spec.template.spec.containers[0].env[9].name", "spec.template.spec.containers[0].env[10].name", "spec.template.spec.containers[0].env[11].name", "spec.template.spec.containers[0].env[12].name", "spec.template.spec.containers[0].env[13].name"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-in-env-var"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked"], "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"name": "rule-credentials-configmap", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["data[aws_access_key_id]", "data[aws_secret_access_key]", "data[azure_batchai_storage_account]", "data[azure_batchai_storage_key]", "data[azure_batch_account]", "data[azure_batch_key]", "data[secret]", "data[key]", "data[password]", "data[pwd]", "data[token]", "data[jwt]", "data[bearer]", "data[credential]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "data": {"aws_access_key_id": "XXXXXX", "aws_secret_access_key": "XXXXXX", "azure_batch_account": "XXXXXX", "azure_batch_key": "XXXXXX", "azure_batchai_storage_account": "XXXXXX", "azure_batchai_storage_key": "XXXXXX", "bearer": "XXXXXX", "credential": "XXXXXX", "jwt": "XXXXXX", "key": "XXXXXX", "password": "XXXXXX", "pwd": "XXXXXX", "secret": "XXXXXX", "token": "XXXXXX"}, "kind": "ConfigMap", "metadata": {"annotations": {"check_path": ".data.aws_access_key_id|.data.aws_secret_access_key|.data.azure_batchai_storage_account|.data.azure_batchai_storage_key|.data.azure_batch_account|.data.azure_batch_key|.data.secret|.data.key|.data.password|.data.pwd|.data.token|.data.jwt|.data.bearer|.data.credential", "description": "Attackers can retrieve and use sensitive information provided via config maps", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "CM-001"}, "name": "cm-001-sensitive-key-referenced-in-configmap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-configmap"}], "listInputIDs": ["/v1/kalm-benchmark/ConfigMap/cm-001-sensitive-key-referenced-in-configmap"], "totalResources": 1, "failedResources": 1, "warningResources": 0}], "remediation": "Use Kubernetes secrets or Key Management Systems to store credentials.", "description": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration.", "score": 1.4184397, "baseScore": 8, "totalResources": 141, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0035", "controlID": "C-0035", "name": "Cluster-admin binding", "ruleReports": [{"name": "rule-list-all-cluster-admins-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should apply least privilege principle. Make sure cluster admin permissions are granted only when it is absolutely necessary. Don't use subjects with such high permissions for daily operations.", "description": "Attackers who have cluster admin permissions (can perform any action on any resource), can take advantage of their privileges for malicious activities. This control determines which subjects have cluster admin permissions.", "score": 8.333333, "baseScore": 8, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0002", "controlID": "C-0002", "name": "Exec into container", "ruleReports": [{"name": "exec-into-container-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl exec\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant permissions can run malicious commands in the context of legitimate containers in the cluster using \u201ckubectl exec\u201d command. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0086", "controlID": "C-0086", "name": "CVE-2022-0492-cgroups-container-escape", "ruleReports": [{"name": "CVE-2022-0492", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Activate AppArmor or SELinux. Follow the least privilege principle and remove root privileges or privilege escalation option and CAP_DAC_OVERRIDE capability. Make sure you don't allow container images from potentially dangerous sources and that containers that must have high privileges are taken from protected repositories.", "description": "Linux Kernel vulnerability CVE-2022-0492 may allow malicious code running inside container to escape container isolation and gain root privileges on the entire node. When fixed Kernel version numbers will become available, this control will be modified to verify them and avoid false positive detections. This control identifies all the resources that don't deploy neither AppArmor nor SELinux, run as root or allow privige escalation or have corresponding dangerous capabilities.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0065", "controlID": "C-0065", "name": "No impersonation", "ruleReports": [{"name": "rule-can-impersonate-users-groups-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "Either remove the impersonate verb from the role where it was found or make sure that this role is not bound to users, groups or service accounts used for ongoing cluster operations. If necessary, bind this role to a subject only for specific needs for limited time period.", "description": "Impersonation is an explicit RBAC permission to use other roles rather than the one assigned to a user, group or service account. This is sometimes needed for testing purposes. However, it is highly recommended not to use this capability in the production environments for daily operations. This control identifies all subjects whose roles include impersonate verb.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0054", "controlID": "C-0054", "name": "Cluster internal networking", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1//Namespace/kalm-benchmark", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define Kubernetes network policies or use alternative products to protect cluster network.", "description": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0049", "controlID": "C-0049", "name": "Network mapping", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1//Namespace/kalm-benchmark", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define network policies or use similar network protection mechanisms.", "description": "If no network policy is defined, attackers who gain access to a single container may use it to probe the network. This control lists all namespaces in which no network policies are defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0041", "controlID": "C-0041", "name": "HostNetwork access", "ruleReports": [{"name": "host-network-access", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostNetwork"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-network-access"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Only connect PODs to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those PODs that must have access to host network by design.", "description": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled.", "score": 0.71428573, "baseScore": 5, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0055", "controlID": "C-0055", "name": "Linux hardening", "ruleReports": [{"name": "linux-hardening", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.", "description": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0062", "controlID": "C-0062", "name": "Sudo in container entrypoint", "ruleReports": [{"name": "sudo-in-container-entrypoint", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Remove sudo from the command line and use Kubernetes native root and capabilities controls to provide necessary privileges where they are required.", "description": "Adding sudo to a container entry point command may escalate process privileges and allow access to forbidden resources. This control checks all the entry point commands in all containers in the POD to find those that have sudo command.", "score": 0.71428573, "baseScore": 7, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0060", "controlID": "C-0060", "name": "Namespace without service accounts", "ruleReports": [{"name": "namespace-without-service-account", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "namespace-without-service-account"}], "listInputIDs": ["/v1/kube-public/ServiceAccount/ns-002-2-place-pod-in-kube-public-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-004-2-no-cpu-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-7-use-root-user-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-1-usage-of-sbin-sh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-3-only-nodeselector-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-1-no-node-selection-specified-dedicated-sa", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/kalm-benchmark/ServiceAccount/pod-024-7-usage-of-bin-busybox-in-container-dedicated-sa", "/v1/res-008-2-no-default-memory-limits-for-namespace/ServiceAccount/res-008-2-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-1-volume-with-read-only-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-4-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-3-use-gid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-8-using-insecure-capability-mac-override-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-2-root-fs-is-explicitly-writeable-dedicated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/kalm-benchmark/ServiceAccount/sc-001-2-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/res-005-1-default-ephemeral-storage-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-3-usage-of-bin-tcsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-1-tag-instead-of-digest-is-fine-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-001-no-readinessprobe-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-1-default-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-045-containing-cve-2021-25741-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/ServiceAccount/res-007-0-no-limitrange-object-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-15-using-insecure-capability-setgid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-1-allowed-privilege-escalation-by-default-dedicated-sa", "/v1/res-007-2-no-default-cpu-limits-for-namespace/ServiceAccount/res-007-2-no-default-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-1-root-fs-is-writeable-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-8-usage-of-usr-bin-busybox-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-002-1-default-memory-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-2-using-latest-image-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-22-using-insecure-capability-sys-ptrace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-003-1-default-cpu-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-2-use-uid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-005-2-no-ephemeral-storage-requests-dedicated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/ServiceAccount/np-003-network-policy-allows-access-to-cloud-metadata-api-filler-dedicated-sa", "/v1/res-007-1-no-default-cpu-request-for-namespace/ServiceAccount/res-007-1-no-default-cpu-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-3-runasnonroot-is-optional-dedicated-sa", "/v1/kube-system/ServiceAccount/ns-002-1-place-pod-in-kube-system-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-5-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-3-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-2-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-3-using-insecure-capability-chown-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-2-using-dangerous-capability-sys-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-3-volume-with-writeable-hostpath-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-7-no-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-5-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-17-using-insecure-capability-setuid-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-006-2-no-ephemeral-storage-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-5-using-insecure-capability-fowner-dedicated-sa", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/rel-004-2-only-nodeaffinity-is-enough-dedicated-sa", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1//Namespace/kalm-benchmark", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-001-2-no-memory-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-1-mounting-docker-socket-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-3-default-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-5-use-runasnonroot-flag-on-container-dedicated-sa", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/kalm-benchmark/ServiceAccount/pod-019-5-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/kalm-benchmark/ServiceAccount/pod-014-no-apparmor-profile-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-008-2-pod-has-hostpid-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-023-no-seccomp-profile-defined-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-042-2-volume-with-writeable-hostpath-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-002-no-livenessprobe-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-2-use-gid-between-1k-10k-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-1-imagepullpolicy-defaults-to-always-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-012-use-hostaliases-to-modify-pods--etc-hosts-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-2-use-runasnonroot-flag-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-001-1-default-memory-requests-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-2-has-hostnetwork-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-2-using-insecure-capability-bpf-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-1-linux-is-not-hardened-dedicated-sa", "/v1/res-008-3-no-default-memory-limits-for-namespace/ServiceAccount/res-008-3-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-1-using-insecure-capability-audit-write-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-4-use-root-user-in-pod-dedicated-sa", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/ServiceAccount/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-13-using-insecure-capability-perfmon-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-6-runasnonroot-is-optional-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-1-use-no-hostipc-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-9-no-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-1-default-to-root-user-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-20-using-insecure-capability-sys-module-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-011-uses-hostport-dedicated-sa", "/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-030-no-securitycontext-defined-dedicated-sa", "/v1/np-002-2-only-egress-is-blocked/ServiceAccount/np-002-2-only-egress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-3-using-dangerous-capability-net-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-3-use-uid-between-1k-10k-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-4-using-insecure-capability-dac-overrides-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-6-automount-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-2-default-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-4-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-036-keep-default-capabilities-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-11-using-insecure-capability-net-bind-service-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-10-using-insecure-capability-mknod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-008-1-use-no-hostpid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-0-using-sysctl-kernel.shm-rmid-forced-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-3-no-explicit-tag-dedicated-sa", "/v1/res-008-1-no-default-memory-request-for-namespace/ServiceAccount/res-008-1-no-default-memory-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-2-privileged-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-043-1-mount-azure-cloud-credentials-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-031-2-allowed-privilege-escalation-explicitly-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-016-no-podsecuritycontext-defined-dedicated-sa", "/v1/np-005-network-policy-refers-no-valid-workload/ServiceAccount/np-005-network-policy-refers-no-valid-workload-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-3-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-4-usage-of-bin-zsh-in-container-dedicated-sa", "/v1/np-004-network-policy-allows-access-to-kubelet/ServiceAccount/np-004-network-policy-allows-access-to-kubelet-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rbac-016-ronin-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-9-using-insecure-capability-mac-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-004-1-default-cpu-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-7-using-insecure-capability-kill-dedicated-sa", "/v1/np-002-1-only-ingress-is-blocked/ServiceAccount/np-002-1-only-ingress-is-blocked-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-18-using-insecure-capability-sys-boot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/deprecated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-6-usage-of-bin-csh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-1-non-privileged-container-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-12-using-insecure-capability-net-raw-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-0-usage-of-bin-bash-in-container-dedicated-sa", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/res-007-3-no-cpu-limits-for-namespace/ServiceAccount/res-007-3-no-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-1-use-no-hostnetwork-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-2-usage-of-bin-ksh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-1-using-dangerous-capability-all-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-025-sensitive-key-referenced-in-environment-variable-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-19-using-insecure-capability-sys-chroot-dedicated-sa", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-035-16-using-insecure-capability-setpcap-dedicated-sa", "/v1/default/ServiceAccount/ns-001-use-default-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-5-usage-of-usr-bin-scsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/wl-001-naked-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-8-set-runasnonroot-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-006-1-default-ephemeral-storage-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-21-using-insecure-capability-sys-rawio-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-14-using-insecure-capability-setfcap-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-2-mounting-docker-directory-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-6-using-insecure-capability-fsetid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-009-2-has-hostipc-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-9-set-runasnonroot-not-correctly-on-container-dedicated-sa", "/v1/res-009-1-no-resource-quota-applied-to-namespace/ServiceAccount/res-009-1-no-resource-quota-applied-to-namespace-filler-dedicated-sa", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-002-2-no-memory-limits-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-1-default-to-root-user-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-4-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-003-2-no-cpu-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-1-default-to-root-group-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-003-no-priorityclass-dedicated-sa"], "totalResources": 156, "failedResources": 1, "warningResources": 0}], "remediation": "Assign explicit service account to every namespace. Reduce RBAC capabilities of such service account to a minimum. Don't allow even read permissions unless it is absolutely necessary.", "description": "It is recommended not to use default service account anywhere in production environment. This control identifies all namespaces without explicit non-default service account.", "score": 0.64102566, "baseScore": 4, "totalResources": 156, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0066", "controlID": "C-0066", "name": "Secret/ETCD encryption enabled", "ruleReports": [], "remediation": "Turn on the etcd encryption in your cluster, for more see the vendor documentation.", "description": "All Kubernetes Secrets are stored primarily in etcd therefore it is important to encrypt it.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0068", "controlID": "C-0068", "name": "PSP enabled", "ruleReports": [], "remediation": "Turn Pod Security Policies on in your cluster, if you use other admission controllers to control the behavior that PSP controls, exclude this control from your scans", "description": "PSP enable fine-grained authorization of pod creation and it is important to enable it", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0069", "controlID": "C-0069", "name": "Disable anonymous access to Kubelet service", "ruleReports": [], "remediation": "Start the kubelet with the --anonymous-auth=false flag.", "description": "By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of system:anonymous and a group of system:unauthenticated.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0005", "controlID": "C-0005", "name": "Control plane hardening", "ruleReports": [], "remediation": "Set the insecure-port flag of the API server to zero.", "description": "Kubernetes control plane API is running with non-secure port enabled which allows attackers to gain unprotected access to the cluster.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0038", "controlID": "C-0038", "name": "Host PID/IPC privileges", "ruleReports": [{"name": "host-pid-ipc-privileges", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostIPC"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.hostPID"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove hostPID and hostIPC from the yaml file(s) privileges unless they are absolutely necessary.", "description": "Containers should be isolated from the host machine as much as possible. The hostPID and hostIPC fields in deployment yaml may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions. This control identifies all PODs using hostPID or hostIPC privileges.", "score": 1.4285715, "baseScore": 5, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0013", "controlID": "C-0013", "name": "Non-root containers", "ruleReports": [{"name": "non-root-containers", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.securityContext.runAsNonRoot", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass"], "totalResources": 140, "failedResources": 7, "warningResources": 0}], "remediation": "If your application does not need root privileges, make sure to define the runAsUser or runAsGroup under the PodSecurityContext and use user ID 1000 or higher. Do not turn on allowPrivlegeEscalation bit and make sure runAsNonRoot is true.", "description": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root.", "score": 5, "baseScore": 6, "totalResources": 140, "failedResources": 7, "warningResources": 0}, {"guid": "", "id": "C-0047", "controlID": "C-0047", "name": "Exposed dashboard", "ruleReports": [], "remediation": "Update dashboard version to v2.0.1 and above.", "description": "Kubernetes dashboard versions before v2.0.1 do not support user authentication. If exposed externally, it will allow unauthenticated remote management of the cluster. This control checks presence of the kubernetes-dashboard deployment and its version number.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0016", "controlID": "C-0016", "name": "Allow privilege escalation", "ruleReports": [{"name": "rule-allow-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-1-allow-pods-sharing-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-2-allow-root-groups-in-pods-may-gid-range", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-012-not-configuring-se-linux", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-3-not-restricting-allowed-seccomp-profiles", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-2-allow-all-host-paths-naive-specification", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-2-not-confining-seccomp", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-3-don-t-allow-root-users-in-pods", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-1-allow-privilege-escalation-in-containers", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-2-allow-root-users-in-pods-uid-range", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-1-not-configuring-apparmor-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-2-allow-pods-sharing-hostpid-by-default", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-010-not-dropping-all-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-2-not-confining-apparmor", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-2-allow-privilege-escalation-in-containers-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-1-allow-root-groups-in-pods-must-gid-range", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-1-allow-pods-sharing-hostipc-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-3-allow-root-groups-in-pods-may-higher-gid", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-1-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-1-allow-root-users-in-pods", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-4-allow-root-groups-in-pods-must-higher-gid", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-009-allowing-net-raw", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-1-allow-all-host-paths-by-default", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-2-allow-pods-sharing-host-network-by-default", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-1-allow-privileged-containers", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-3-disallow-all-host-paths-properly", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-2-allow-pods-sharing-hostipc-namespace-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-1-allow-pods-sharing-host-network", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-1-not-configuring-seccomp-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-2-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-3-not-restricting-allowed-apparmor-profiles", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-2-allow-privileged-containers-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace"], "totalResources": 171, "failedResources": 3, "warningResources": 0}], "remediation": "If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.", "description": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities.", "score": 1.754386, "baseScore": 6, "totalResources": 171, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0081", "controlID": "C-0081", "name": "CVE-2022-24348-argocddirtraversal", "ruleReports": [], "remediation": "Update your ArgoCD deployment to fixed versions (v2.1.9,v2.2.4 or v2.3.0)", "description": "CVE-2022-24348 is a major software supply chain 0-day vulnerability in the popular open source CD platform Argo CD which can lead to privilege escalation and information disclosure.", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0087", "controlID": "C-0087", "name": "CVE-2022-23648-containerd-fs-escape", "ruleReports": [], "remediation": "Patch containerd to 1.6.1, 1.5.10, 1.4.12  or above", "description": "CVE-2022-23648 is a vulnerability of containerd enabling attacker to gain access to read-only copies of arbitrary files from the host using aspecially-crafted POD configuration yamls", "score": 7, "baseScore": 7, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0017", "controlID": "C-0017", "name": "Immutable container filesystem", "ruleReports": [{"name": "immutable-container-filesystem", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}], "listInputIDs": ["apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Set the filesystem of the container to read-only when possible (POD securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.", "description": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks.", "score": 1.4285715, "baseScore": 3, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0061", "controlID": "C-0061", "name": "Pods in default namespace", "ruleReports": [{"name": "pods-in-default-namespace", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["metadata.namespace"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "pods-in-default-namespace"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Create necessary namespaces and move all the PODs from default namespace there.", "description": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace.", "score": 0.71428573, "baseScore": 3, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0067", "controlID": "C-0067", "name": "Audit logs enabled", "ruleReports": [], "remediation": "Turn on audit logging for your cluster. Look at the vendor guidelines for more details", "description": "Audit logging is an important security feature in Kubernetes, it enables the operator to track requests to the cluster. It is important to use it so the operator has a record of events happened in Kubernetes", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0078", "controlID": "C-0078", "name": "Images from allowed registry", "ruleReports": [{"name": "container-image-repository", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "container-image-repository"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].image"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "container-image-repository"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "You should enable all trusted repositories in the parameters of this control.", "description": "This control is intended to ensure that all the used container images are taken from the authorized repositories. It allows user to list all the approved repositories and will fail all the images taken from any repository outside of this list.", "score": 100, "baseScore": 5, "totalResources": 140, "failedResources": 140, "warningResources": 0}], "score": 17.387714, "wcsScore": 15741, "totalResources": 356, "failedResources": 152, "warningResources": 0}, {"name": "DevOpsBest", "controlReports": [{"guid": "", "id": "C-0073", "controlID": "C-0073", "name": "Naked PODs", "ruleReports": [{"name": "naked-pods", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.ownerReferences", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "naked-pods"}], "listInputIDs": ["/v1/kalm-benchmark/Pod/wl-001-naked-pod"], "totalResources": 1, "failedResources": 1, "warningResources": 0}], "remediation": "Create necessary Deployment object for every POD making any POD a first class citizen in your IaC architecture.", "description": "It is not recommended to create PODs without parental Deployment, ReplicaSet, StatefulSet etc.Manual creation if PODs may lead to a configuration drifts and other untracked changes in the system. Such PODs won't be automatically rescheduled by Kubernetes in case of a crash or infrastructure failure. This control identifies every POD that does not have corresponding parental object.", "score": 100, "baseScore": 3, "totalResources": 1, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0074", "controlID": "C-0074", "name": "Containers mounting Docker socket", "ruleReports": [{"name": "containers-mounting-docker-socket", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.volumes[0].hostPath.path"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "containers-mounting-docker-socket"}], "listInputIDs": ["apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Remove docker socket mount request or define an exception.", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands, if Docker runtime is available. This control identifies PODs that attempt to mount Docker socket for accessing Docker runtime.", "score": 0.71428573, "baseScore": 5, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0077", "controlID": "C-0077", "name": "K8s common labels usage", "ruleReports": [{"name": "K8s common labels usage", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Define applicable labels or use the exception mechanism to prevent further notifications.", "description": "Kubernetes common labels help manage and monitor Kubernetes cluster using different tools such as kubectl, dashboard and others in an interoperable way. Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/ for more information. This control helps you find objects that don't have any of these labels defined.", "score": 0.71428573, "baseScore": 1, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0061", "controlID": "C-0061", "name": "Pods in default namespace", "ruleReports": [{"name": "pods-in-default-namespace", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["metadata.namespace"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "pods-in-default-namespace"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Create necessary namespaces and move all the PODs from default namespace there.", "description": "It is recommended to avoid running PODs in cluster without explicit namespace assignment. This control identifies all the PODs running in the default namespace.", "score": 0.71428573, "baseScore": 3, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0044", "controlID": "C-0044", "name": "Container hostPort", "ruleReports": [{"name": "container-hostPort", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].ports[0].hostPort"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-hostPort"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead.", "description": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0004", "controlID": "C-0004", "name": "Resources memory limit and request", "ruleReports": [{"name": "resources-memory-limit-and-request", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-memory-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}, {"path": "spec.containers[0].resources.requests.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-memory-limit-and-request"}], "listInputIDs": ["apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Set the memory limit or use exception mechanism to avoid unnecessary notifications.", "description": "This control identifies all Pods for which the memory limit is not set.", "score": 2.857143, "baseScore": 7, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0056", "controlID": "C-0056", "name": "Configured liveness probe", "ruleReports": [{"name": "configured-liveness-probe", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].livenessProbe", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "configured-liveness-probe"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Ensure Liveness probes are configured wherever possible.", "description": "Liveness probe is intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restrat the container. It is highly recommended to define liveness probe for every worker container. This control finds all the PODs where the Liveness probe is not configured.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0075", "controlID": "C-0075", "name": "Image pull policy on latest tag", "ruleReports": [{"name": "image-pull-policy-is-not-set-to-always", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "Set ImagePullPolicy to Always in all PODs found by this control.", "description": "While usage of the latest tag is not generally recommended, in some cases this is necessary. If it is, the ImagePullPolicy must be set to Always, otherwise Kubernetes may run an older image with the same name that happens to be present in the node cache. Note that using Always will not cause additional image downloads because Kubernetes will check the image hash of the local local against the registry and only pull the image if this hash has changed, which is exactly what users want when use the latest tag. This control will identify all PODs with latest tag that have ImagePullSecret not set to Always.", "score": 0.71428573, "baseScore": 2, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0076", "controlID": "C-0076", "name": "Label usage for resources", "ruleReports": [{"name": "label-usage-for-resources", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.memory|.spec.limits.default.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-2"}, "name": "res-008-2-no-default-memory-limits-for-namespace", "namespace": "res-008-2-no-default-memory-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-0"}, "name": "res-007-0-no-limitrange-object-for-namespace", "namespace": "res-007-0-no-limitrange-object-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.default.cpu|.spec.limits.default.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-2"}, "name": "res-007-2-no-default-cpu-limits-for-namespace", "namespace": "res-007-2-no-default-cpu-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-001"}, "name": "ns-001-use-default-namespace", "namespace": "default"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.cpu|LimitRange.spec.limits.max.cpu|.spec.limits.min.cpu|.spec.limits.max.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-3"}, "name": "res-007-3-no-cpu-limits-for-namespace", "namespace": "res-007-3-no-cpu-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.min.memory|LimitRange.spec.limits.max.memory|.spec.limits.min.memory|.spec.limits.max.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-3"}, "name": "res-008-3-no-default-memory-limits-for-namespace", "namespace": "res-008-3-no-default-memory-limits-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.cpu|.spec.limits.defaultRequest.cpu", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-007-1"}, "name": "res-007-1-no-default-cpu-request-for-namespace", "namespace": "res-007-1-no-default-cpu-request-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "LimitRange.spec.limits.defaultRequest.memory|.spec.limits.defaultRequest.memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-008-1"}, "name": "res-008-1-no-default-memory-request-for-namespace", "namespace": "res-008-1-no-default-memory-request-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.spec.hard.cpu|ResourceQuota.spec.hard.memory|ResourceQuota.spec.hard.requests.cpu|ResourceQuota.spec.hard.requests.memory|ResourceQuota.spec.hard.pods|.spec.hard.cpu|.spec.hard.memory|.spec.hard.requests.cpu|.spec.hard.requests.memory|.spec.hard.pods", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-2"}, "name": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "namespace": "res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "ResourceQuota.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-009-1"}, "name": "res-009-1-no-resource-quota-applied-to-namespace", "namespace": "res-009-1-no-resource-quota-applied-to-namespace"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "metadata.labels", "value": "YOUR_VALUE"}, {"path": "spec.template.metadata.labels", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "label-usage-for-resources"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace"], "totalResources": 140, "failedResources": 140, "warningResources": 0}], "remediation": "Define labels that are most suitable to your needs of use the exceptions to prevent further notifications.", "description": "It is recommended to set labels that identify semantic attributes of your application or deployment. For example, { app: myapp, tier: frontend, phase: test, deployment: v3 }. These labels can used to assign policies to logical groups of the deployments as well as for presentation and tracking purposes. This control helps you find deployments without any of the expected labels.", "score": 100, "baseScore": 2, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"guid": "", "id": "C-0050", "controlID": "C-0050", "name": "Resources CPU limit and request", "ruleReports": [{"name": "resources-cpu-limit-and-request", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-cpu-limit-and-request"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}, {"path": "spec.template.spec.containers[0].resources.requests.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resources-cpu-limit-and-request"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Set the CPU limit or use exception mechanism to avoid unnecessary notifications.", "description": "This control identifies all Pods for which the CPU limit is not set.", "score": 2.857143, "baseScore": 7, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0018", "controlID": "C-0018", "name": "Configured readiness probe", "ruleReports": [{"name": "configured-readiness-probe", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].readinessProbe", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "configured-readiness-probe"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Ensure Readiness probes are configured wherever possible.", "description": "Readiness probe is intended to ensure that workload is ready to process network traffic. It is highly recommended to define readiness probe for every worker container. This control finds all the PODs where the readiness probe is not configured.", "score": 0.71428573, "baseScore": 3, "totalResources": 140, "failedResources": 1, "warningResources": 0}], "score": 6.78189, "wcsScore": 5323, "totalResources": 140, "failedResources": 140, "warningResources": 0}, {"name": "NSA", "controlReports": [{"guid": "", "id": "C-0044", "controlID": "C-0044", "name": "Container hostPort", "ruleReports": [{"name": "container-hostPort", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].ports[0].hostPort"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "container-hostPort"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Avoid usage of hostPort unless it is absolutely necessary, in which case define appropriate exception. Use NodePort / ClusterIP instead.", "description": "Configuring hostPort requires a particular port number. If two objects specify the same HostPort, they could not be deployed to the same node. It may prevent the second object from starting, even if Kubernetes will try reschedule it on another node, provided there are available nodes with sufficient amount of resources. Also, if the number of replicas of such workload is higher than the number of nodes, the deployment will consistently fail.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0067", "controlID": "C-0067", "name": "Audit logs enabled", "ruleReports": [], "remediation": "Turn on audit logging for your cluster. Look at the vendor guidelines for more details", "description": "Audit logging is an important security feature in Kubernetes, it enables the operator to track requests to the cluster. It is important to use it so the operator has a record of events happened in Kubernetes", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0069", "controlID": "C-0069", "name": "Disable anonymous access to Kubelet service", "ruleReports": [], "remediation": "Start the kubelet with the --anonymous-auth=false flag.", "description": "By default, requests to the kubelet's HTTPS endpoint that are not rejected by other configured authentication methods are treated as anonymous requests, and given a username of system:anonymous and a group of system:unauthenticated.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0017", "controlID": "C-0017", "name": "Immutable container filesystem", "ruleReports": [{"name": "immutable-container-filesystem", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "immutable-container-filesystem"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Set the filesystem of the container to read-only when possible (POD securityContext, readOnlyRootFilesystem: true). If containers application needs to write into the filesystem, it is recommended to mount secondary filesystems for specific directories where application require write access.", "description": "Mutable container filesystem can be abused to inject malicious code or data into containers. Use immutable (read-only) filesystem to limit potential attacks.", "score": 1.4285715, "baseScore": 3, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0057", "controlID": "C-0057", "name": "Privileged container", "ruleReports": [{"name": "rule-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.privileged"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-privilege-escalation"}], "listInputIDs": ["/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove privileged capabilities by setting the securityContext.privileged to false. If you must deploy a Pod as privileged, add other restriction to it, such as network policy, Seccomp etc and still remove all unnecessary capabilities. Use the exception mechanism to remove unnecessary notifications.", "description": "Potential attackers may gain access to privileged containers and inherit access to the host resources. Therefore, it is not recommended to deploy privileged containers unless it is absolutely necessary. This control identifies all the privileged Pods.", "score": 1.4285715, "baseScore": 8, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0002", "controlID": "C-0002", "name": "Exec into container", "ruleReports": [{"name": "exec-into-container-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "It is recommended to prohibit \u201ckubectl exec\u201d command in production environments. It is also recommended not to use subjects with this permission for daily cluster operations.", "description": "Attackers with relevant permissions can run malicious commands in the context of legitimate containers in the cluster using \u201ckubectl exec\u201d command. This control determines which subjects have permissions to use this command.", "score": 8.333333, "baseScore": 5, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0030", "controlID": "C-0030", "name": "Ingress and Egress blocked", "ruleReports": [{"name": "ingress-and-egress-blocked", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-3"}, "name": "pod-024-3-usage-of-bin-tcsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at SA level will be the default for pods as well", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-3"}, "name": "pod-003-3-default-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "The hostPID defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-1"}, "name": "pod-008-1-use-no-hostpid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.egress[].to[].ipBlock|.egress[].to[].ipBlock", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-003"}, "name": "np-003-network-policy-allows-access-to-cloud-metadata-api", "namespace": "np-003-network-policy-allows-access-to-cloud-metadata-api"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.podSelector|.spec.podSelector", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-005"}, "name": "np-005-network-policy-refers-no-valid-workload", "namespace": "np-005-network-policy-refers-no-valid-workload"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-1"}, "name": "ns-002-1-place-pod-in-kube-system", "namespace": "kube-system"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-15"}, "name": "pod-035-15-using-insecure-capability-setgid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-0"}, "name": "pod-024-0-usage-of-bin-bash-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostAliases", "description": "Managing /etc/hosts aliases can prevent Docker from modifying the file after a pod's containers have already been started", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-012"}, "name": "pod-012-use-hostaliases-to-modify-pods--etc-hosts", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-2"}, "name": "pod-019-2-use-gid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-3"}, "name": "pod-018-3-use-uid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-2"}, "name": "pod-017-2-use-runasnonroot-flag-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-3"}, "name": "sc-002-3-no-explicit-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-1"}, "name": "res-006-1-default-ephemeral-storage-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0-v1.22.1, v1.21.0-v1.21.4, v1.20.0-v1.20.10, <v1.19.14", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-045"}, "name": "pod-045-containing-cve-2021-25741", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-4"}, "name": "pod-019-4-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccount", "description": "ServiceAccount field is deprecated, ServiceAccountName should be used instead", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-013"}, "name": "pod-013-use-serviceaccount-field", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-8"}, "name": "pod-024-8-usage-of-usr-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-3"}, "name": "sc-001-3-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting default CPU requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-1"}, "name": "res-003-1-default-cpu-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-6"}, "name": "pod-024-6-usage-of-bin-csh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-1"}, "name": "sc-001-1-imagepullpolicy-defaults-to-always", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-5"}, "name": "pod-035-5-using-insecure-capability-fowner", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-1"}, "name": "pod-018-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-1"}, "name": "np-002-1-only-ingress-is-blocked", "namespace": "np-002-1-only-ingress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-7"}, "name": "pod-024-7-usage-of-bin-busybox-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.namespace", "description": "azure should not be used for custom workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NS-002-2"}, "name": "ns-002-2-place-pod-in-kube-public", "namespace": "kube-public"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "An GID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-3"}, "name": "pod-019-3-use-gid-between-1k-10k-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-2"}, "name": "pod-024-2-usage-of-bin-ksh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-4"}, "name": "pod-024-4-usage-of-bin-zsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-2"}, "name": "pod-033-2-root-fs-is-explicitly-writeable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.priorityClassName", "description": "Pods with high risk workloads can be assigned higher PriorityClasses to ensure reliability", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-003"}, "name": "rel-003-no-priorityclass", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"check_path": ".metadata.ownerReferences|.kind", "container.apparmor.security.beta.kubernetes.io/app": "runtime/default", "container.seccomp.security.alpha.kubernetes.io/app": "runtime/default", "description": "Pods shouldn't be deployed without a resource managing it", "expected": "alert", "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-8"}, "name": "pod-017-8-set-runasnonroot-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext", "description": "Not providing a securityContext leads to the use of too permissive settings for the containers", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-030"}, "name": "pod-030-no-securitycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "Specify an explicit tag or digest to have full control over the running container image", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-1"}, "name": "sc-002-1-tag-instead-of-digest-is-fine", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].livenessProbe", "description": "Configuring a livenessProbe is recommended as it's intended to ensure that workload remains healthy during its entire execution lifecycle, or otherwise restart the container.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-002"}, "name": "rel-002-no-livenessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-006-2"}, "name": "res-006-2-no-ephemeral-storage-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting memory requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-2"}, "name": "res-001-2-no-memory-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].readinessProbe", "description": "Configuring a readinessProbe is recommended as it's intended to ensure that workload is ready to process network traffic", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-001"}, "name": "rel-001-no-readinessprobe", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.policyTypes[]|.spec.policyTypes[]", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-002-2"}, "name": "np-002-2-only-egress-is-blocked", "namespace": "np-002-2-only-egress-is-blocked"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-17"}, "name": "pod-035-17-using-insecure-capability-setuid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-6"}, "name": "pod-017-6-runasnonroot-is-optional-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-4"}, "name": "pod-018-4-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-1"}, "name": "pod-024-1-usage-of-sbin-sh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-5"}, "name": "pod-017-5-use-runasnonroot-flag-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storarge limit can suffocate the node by using all available storage", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-1"}, "name": "res-005-1-default-ephemeral-storage-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "if no service account is specified it defaults to the `default` ServiceAccount, which should be avoided. Create a dedicated ServiceAccount without any permissions instead.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-2"}, "name": "pod-002-2-no-sa-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-7"}, "name": "pod-035-7-using-insecure-capability-kill", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-1"}, "name": "pod-044-1-mounting-docker-socket", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-3"}, "name": "pod-035-3-using-insecure-capability-chown", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-4"}, "name": "pod-035-4-using-insecure-capability-dac-overrides", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.memory", "description": "not setting default memory requests can lead to problems upon admission", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-001-1"}, "name": "res-001-1-default-memory-requests-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-2"}, "name": "pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-1"}, "name": "pod-035-1-using-insecure-capability-audit-write", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-1"}, "name": "pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities.drop", "description": "When not dropping all capabilities the container gets the capabilities defined by the container runtime, which is often fairly generous and does not adhere to principle of least privilege", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-036"}, "name": "pod-036-keep-default-capabilities", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": "NetworkPolicy.spec.egress[].ports[].port|.spec.egress[].ports[].port", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-004"}, "name": "np-004-network-policy-allows-access-to-kubelet", "namespace": "np-004-network-policy-allows-access-to-kubelet"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io.metadata.annotations[container.apparmor.security.beta.kubernetes.io]", "description": "AppArmor can be configured for any application to reduce its potential attack surface and provide greater in-depth defense.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-014"}, "name": "pod-014-no-apparmor-profile", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "by default GID 0 is used, which has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-1"}, "name": "pod-019-1-default-to-root-group", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-6"}, "name": "pod-003-6-automount-pod-no-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-14"}, "name": "pod-035-14-using-insecure-capability-setfcap", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-043-1"}, "name": "pod-043-1-mount-azure-cloud-credentials", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.ephemeral-storage", "description": "not setting ephemeral storage limit can suffocate the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-005-2"}, "name": "res-005-2-no-ephemeral-storage-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-5"}, "name": "pod-018-5-use-uid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "disabling automounting at Pod level takes precedence over SA", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-9"}, "name": "pod-003-9-no-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-10"}, "name": "pod-035-10-using-insecure-capability-mknod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-11"}, "name": "pod-035-11-using-insecure-capability-net-bind-service", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged", "description": "Changing the privileged flag is optional as it defaults to False", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-1"}, "name": "pod-032-1-non-privileged-container-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-1"}, "name": "rel-004-1-no-node-selection-specified", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.sysctls[]", "description": "Giving dangerous capabilities to a container increases the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-021-0"}, "name": "pod-021-0-using-sysctl-kernel.shm-rmid-forced", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].command", "description": "Attackers who can run a cmd/bash script inside a container can use it to execute malicious code", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-024-5"}, "name": "pod-024-5-usage-of-usr-bin-scsh-in-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.readOnlyRootFilesystem", "description": "Using an immutable root filesystem prevents against attackers from compromising the machine through permanent local changes.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-033-1"}, "name": "pod-033-1-root-fs-is-writeable-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "using hostPath is not ideal but can be tolerated when it's read-only", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-1"}, "name": "pod-042-1-volume-with-read-only-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsUser|.spec.securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot", "description": "An UID above 1000 is enough to avoid running as a system user", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-018-2"}, "name": "pod-018-2-use-uid-between-1k-10k-on-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "mounting Docker socket (Unix socket) enables container to access Docker internals, retrieve sensitive information and execute Docker commands.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-044-2"}, "name": "pod-044-2-mounting-docker-directory", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Using runAsNonRoot is a viable alternative to `runAsUser>1000`", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-3"}, "name": "pod-017-3-runasnonroot-is-optional", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].imagePullPolicy", "description": "Kubernetes may run older version of the container images without user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-001-2"}, "name": "sc-001-2-no-proper-imagepullpolicy-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-2"}, "name": "rel-004-2-only-nodeaffinity-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.serviceAccountName", "description": "`default` ServiceAccount should never be used. Create a dedicated ServiceAccount when access to API server is needed when access to API server is needed.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-002-1"}, "name": "pod-002-1-explicit-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsGroup|.spec.containers[].securityContext.runAsGroup", "description": "in case of conflicting settings, the value on the container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-019-5"}, "name": "pod-019-5-use-gid-set-in-container-takes-precedence", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext", "description": "not providing a podSecurityContext leads to the use of too permissive settings for the pod", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-016"}, "name": "pod-016-no-podsecuritycontext-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "The hostIPC defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-1"}, "name": "pod-009-1-use-no-hostipc", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-6"}, "name": "pod-035-6-using-insecure-capability-fsetid", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-2"}, "name": "pod-022-2-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].image", "description": "When using latest image tag the used image can change without the user knowing about this", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "SC-002-2"}, "name": "sc-002-2-using-latest-image-tag", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.seccomp.security.alpha.kubernetes.io/pod|.metadata.annotations[seccomp.security.alpha.kubernetes.io/pod]|.spec.securityContext.seccompProfile|.spec.containers[].securityContext.seccompProfile", "description": "not providing a seccomp profile allows a process more capabilities than necessary", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-023"}, "name": "pod-023-no-seccomp-profile-defined", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-19"}, "name": "pod-035-19-using-insecure-capability-sys-chroot", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-3"}, "name": "pod-022-3-one-approach-to-hardening-linux-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.requests.cpu", "description": "not setting CPU requests can lead to problems upon admission", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-003-2"}, "name": "res-003-2-no-cpu-requests", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".metadata.annotations|.metadata.annotations.container.apparmor.security.beta.kubernetes.io|.metadata.annotations[container.apparmor.security.beta.kubernetes.io]|.spec.securityContext.seccompProfile|.spec.securityContext.seLinuxOptions|.spec.containers[].securityContext.seccompProfile|.spec.containers[].securityContext.seLinuxOptions", "description": "Not hardening a linux system can increase the impact of a compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-022-1"}, "name": "pod-022-1-linux-is-not-hardened", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.nodeSelector|.spec.affinity.nodeAffinity", "description": "Pods with high risk workloads can be assigned to specific node to separate them from other workloads", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "REL-004-3"}, "name": "rel-004-3-only-nodeselector-is-enough", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].ports[].hostPort", "description": "When you bind a Pod to a hostPort, it limits the number of places the  Pod can be scheduled, because each <hostIP, hostPort, protocol> combination must be unique.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-011"}, "name": "pod-011-uses-hostport", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "The hostNetwork defaults to `false` and thus should be okay", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-1"}, "name": "pod-010-1-use-no-hostnetwork", "namespace": "kalm-benchmark"}}]}, "rulename": "ingress-and-egress-blocked"}], "listInputIDs": ["apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "networking.k8s.io/v1/np-002-2-only-egress-is-blocked/NetworkPolicy/np-002-2-only-egress-is-blocked", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "networking.k8s.io/v1/res-008-1-no-default-memory-request-for-namespace/NetworkPolicy/res-008-1-no-default-memory-request-for-namespace", "networking.k8s.io/v1/res-009-1-no-resource-quota-applied-to-namespace/NetworkPolicy/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark-unrestricted-ns", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "networking.k8s.io/v1/res-007-3-no-cpu-limits-for-namespace/NetworkPolicy/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "networking.k8s.io/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/NetworkPolicy/np-003-network-policy-allows-access-to-cloud-metadata-api", "networking.k8s.io/v1/np-005-network-policy-refers-no-valid-workload/NetworkPolicy/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "networking.k8s.io/v1/np-002-1-only-ingress-is-blocked/NetworkPolicy/np-002-1-only-ingress-is-blocked", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "networking.k8s.io/v1/res-008-3-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "networking.k8s.io/v1/np-004-network-policy-allows-access-to-kubelet/NetworkPolicy/np-004-network-policy-allows-access-to-kubelet", "networking.k8s.io/v1/res-007-0-no-limitrange-object-for-namespace/NetworkPolicy/res-007-0-no-limitrange-object-for-namespace", "networking.k8s.io/v1/res-007-1-no-default-cpu-request-for-namespace/NetworkPolicy/res-007-1-no-default-cpu-request-for-namespace", "networking.k8s.io/v1/res-007-2-no-default-cpu-limits-for-namespace/NetworkPolicy/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "networking.k8s.io/v1/res-008-2-no-default-memory-limits-for-namespace/NetworkPolicy/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "networking.k8s.io/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/NetworkPolicy/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "networking.k8s.io/v1//NetworkPolicy/kalm-benchmark", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork"], "totalResources": 156, "failedResources": 130, "warningResources": 0}], "remediation": "Define a network policy that restricts ingress and egress connections.", "description": "Disable Ingress and Egress traffic on all pods wherever possible. It is recommended to define restrictive network policy on all new PODs, and then enable sources/destinations that this POD must communicate with.", "score": 83.333336, "baseScore": 6, "totalResources": 156, "failedResources": 130, "warningResources": 0}, {"guid": "", "id": "C-0035", "controlID": "C-0035", "name": "Cluster-admin binding", "ruleReports": [{"name": "rule-list-all-cluster-admins-v1", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-4-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-4-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-5-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-5-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-007-1-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-007-1-role-binds-default-serviceaccount-rb-rbac-007-1-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-8-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-8-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-7-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-7-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-2-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-2-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-1-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-1-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-0-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-0-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-6-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-6-too-much", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-3-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-3-too-much", "/kalm-benchmark/ServiceAccount/default/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRole/rbac-007-2-cluster-role-bind-default-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/ClusterRoleBinding/rbac-007-2-cluster-role-binds-default-serviceaccount-rb-rbac-007-2-cluster-role-bind-default-sa", "//User/poly-role-sa/rbac.authorization.k8s.io/v1/kalm-benchmark/Role/rbac-017-role-9-too-much/rbac.authorization.k8s.io/v1/kalm-benchmark/RoleBinding/rbac-017-too-many-roles-per-subject-rb-rbac-017-role-9-too-much"], "totalResources": 12, "failedResources": 0, "warningResources": 0}], "remediation": "You should apply least privilege principle. Make sure cluster admin permissions are granted only when it is absolutely necessary. Don't use subjects with such high permissions for daily operations.", "description": "Attackers who have cluster admin permissions (can perform any action on any resource), can take advantage of their privileges for malicious activities. This control determines which subjects have cluster admin permissions.", "score": 8.333333, "baseScore": 8, "totalResources": 12, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0046", "controlID": "C-0046", "name": "Insecure capabilities", "ruleReports": [{"name": "insecure-capabilities", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-22"}, "name": "pod-035-22-using-insecure-capability-sys-ptrace", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-13"}, "name": "pod-035-13-using-insecure-capability-perfmon", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-21"}, "name": "pod-035-21-using-insecure-capability-sys-rawio", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-18"}, "name": "pod-035-18-using-insecure-capability-sys-boot", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-3"}, "name": "pod-034-3-using-dangerous-capability-net-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-9"}, "name": "pod-035-9-using-insecure-capability-mac-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-1"}, "name": "pod-034-1-using-dangerous-capability-all", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-20"}, "name": "pod-035-20-using-insecure-capability-sys-module", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-16"}, "name": "pod-035-16-using-insecure-capability-setpcap", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-12"}, "name": "pod-035-12-using-insecure-capability-net-raw", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-8"}, "name": "pod-035-8-using-insecure-capability-mac-override", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Insecure capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-035-2"}, "name": "pod-035-2-using-insecure-capability-bpf", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.capabilities.add[0]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.capabilities", "description": "Dangerous capabilities can increase the impact of a container compromise", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-034-2"}, "name": "pod-034-2-using-dangerous-capability-sys-admin", "namespace": "kalm-benchmark"}}]}, "rulename": "insecure-capabilities"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin"], "totalResources": 140, "failedResources": 13, "warningResources": 0}], "remediation": "Remove all insecure capabilities which aren\u2019t necessary for the container.", "description": "Giving insecure or excsessive capabilities to a container can increase the impact of the container compromise. This control identifies all the PODs with dangerous capabilities (see documentation pages for details).", "score": 9.285714, "baseScore": 5, "totalResources": 140, "failedResources": 13, "warningResources": 0}, {"guid": "", "id": "C-0055", "controlID": "C-0055", "name": "Linux hardening", "ruleReports": [{"name": "linux-hardening", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": null, "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container"], "totalResources": 140, "failedResources": 0, "warningResources": 0}], "remediation": "You can use AppArmor, Seccomp, SELinux and Linux Capabilities mechanisms to restrict containers abilities to utilize unwanted privileges.", "description": "Containers may be given more privileges than they actually need. This can increase the potential impact of a container compromise.", "score": 0.71428573, "baseScore": 4, "totalResources": 140, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0058", "controlID": "C-0058", "name": "CVE-2021-25741 - Using symlink for arbitrary host file system access.", "ruleReports": [], "remediation": "To mitigate this vulnerability without upgrading kubelet, you can disable the VolumeSubpath feature gate on kubelet and kube-apiserver, or remove any existing Pods using subPath or subPathExpr feature.", "description": "A user may be able to create a container with subPath or subPathExpr volume mounts to access files & directories anywhere on the host filesystem. Following Kubernetes versions are affected: v1.22.0 - v1.22.1, v1.21.0 - v1.21.4, v1.20.0 - v1.20.10, version v1.19.14 and lower. This control checks the vulnerable versions and the actual usage of the subPath feature in all Pods in the cluster. If you want to learn more about the CVE, please refer to the CVE link: https://nvd.nist.gov/vuln/detail/CVE-2021-25741", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0006", "controlID": "C-0006", "name": "Allowed hostPath", "ruleReports": [{"name": "alert-rw-hostpath", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].volumeMounts[0].readOnly", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-3"}, "name": "pod-042-3-volume-with-writeable-hostpath-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].volumeMounts[0].readOnly"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.volumes[]|.spec.volumes[].hostPath|.spec.volumes[].hostPath.path|.spec.containers[].volumeMounts[]", "description": "Attackers can use a writable hostpath to gain persistence on underlying host system", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-042-2"}, "name": "pod-042-2-volume-with-writeable-hostpath", "namespace": "kalm-benchmark"}}]}, "rulename": "alert-rw-hostpath"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Refrain from using host path mount.", "description": "Mounting host directory to the container can be abused to get access to sensitive data and gain persistence on the host machine.", "score": 1.4285715, "baseScore": 6, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0034", "controlID": "C-0034", "name": "Automatic mapping of service account", "ruleReports": [{"name": "automount-service-account", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "relying on default on both pod and SA level leads to token being needlessly mounted", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "allowing automounting on SA leads to all pods without explicit setting to mount it automatically", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-2"}, "name": "pod-003-2-default-pod-automount-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-1"}, "name": "pod-003-1-default-pod-and-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-5"}, "name": "pod-003-5-automount-pod-and-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RBAC-016"}, "name": "rbac-016-ronin-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "WL-001"}, "name": "wl-001-naked-pod-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.automountServiceAccountToken|.automountServiceAccountToken", "description": "enabling automounting at Pod level takes precedence over SA", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-4"}, "name": "pod-003-4-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "automountServiceAccountToken", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-7"}, "name": "pod-003-7-no-automount-pod-default-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}, {"alertMessage": "", "failedPaths": ["automountServiceAccountToken"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "automountServiceAccountToken": true, "kind": "ServiceAccount", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-003-8"}, "name": "pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "namespace": "kalm-benchmark"}}]}, "rulename": "automount-service-account"}], "listInputIDs": ["/v1/kalm-benchmark/ServiceAccount/pod-031-2-allowed-privilege-escalation-explicitly-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "/v1/kalm-benchmark/ServiceAccount/pod-010-2-has-hostnetwork-set-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "/v1/default/ServiceAccount/ns-001-use-default-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "/v1/kalm-benchmark/ServiceAccount/pod-021-0-using-sysctl-kernel.shm-rmid-forced-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "/v1/kalm-benchmark/ServiceAccount/pod-012-use-hostaliases-to-modify-pods--etc-hosts-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-2-default-pod-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-025-sensitive-key-referenced-in-environment-variable-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "/v1/kalm-benchmark/ServiceAccount/sc-002-3-no-explicit-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-2-mounting-docker-directory-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "/v1/kalm-benchmark/ServiceAccount/sc-001-2-no-proper-imagepullpolicy-set-dedicated-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "/v1/kalm-benchmark/ServiceAccount/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-8-usage-of-usr-bin-busybox-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "/v1/kalm-benchmark/ServiceAccount/pod-035-2-using-insecure-capability-bpf-dedicated-sa", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "/v1/kalm-benchmark/ServiceAccount/pod-034-2-using-dangerous-capability-sys-admin-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-2-usage-of-bin-ksh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "/v1/np-004-network-policy-allows-access-to-kubelet/ServiceAccount/np-004-network-policy-allows-access-to-kubelet-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-3-using-insecure-capability-chown-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-032-1-non-privileged-container-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-3-only-nodeselector-is-enough-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "/v1/kalm-benchmark/ServiceAccount/pod-035-6-using-insecure-capability-fsetid-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "/v1/kalm-benchmark/ServiceAccount/pod-017-4-use-root-user-in-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-12-using-insecure-capability-net-raw-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-4-usage-of-bin-zsh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-001-2-no-memory-requests-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-2-use-uid-between-1k-10k-on-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "/v1/kalm-benchmark/ServiceAccount/pod-044-1-mounting-docker-socket-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "/v1/kalm-benchmark/ServiceAccount/rel-004-2-only-nodeaffinity-is-enough-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-017-5-use-runasnonroot-flag-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-004-1-no-node-selection-specified-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-010-1-use-no-hostnetwork-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "/v1/kalm-benchmark/ServiceAccount/pod-018-3-use-uid-between-1k-10k-on-container-dedicated-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-034-3-using-dangerous-capability-net-admin-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-022-2-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-16-using-insecure-capability-setpcap-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "/v1/kalm-benchmark/ServiceAccount/pod-023-no-seccomp-profile-defined-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "/v1/kalm-benchmark/ServiceAccount/pod-035-4-using-insecure-capability-dac-overrides-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-003-2-no-cpu-requests-dedicated-sa", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-005-2-no-ephemeral-storage-requests-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "/v1/kalm-benchmark/ServiceAccount/pod-031-1-allowed-privilege-escalation-by-default-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-1-usage-of-sbin-sh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-1-linux-is-not-hardened-dedicated-sa", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-016-no-podsecuritycontext-defined-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-5-use-uid-set-in-container-takes-precedence-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "/v1/kalm-benchmark/ServiceAccount/sc-001-1-imagepullpolicy-defaults-to-always-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-004-2-no-cpu-limits-dedicated-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "/v1/np-002-1-only-ingress-is-blocked/ServiceAccount/np-002-1-only-ingress-is-blocked-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "/v1/kalm-benchmark/ServiceAccount/pod-035-1-using-insecure-capability-audit-write-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "/v1/kalm-benchmark/ServiceAccount/pod-003-3-default-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-14-using-insecure-capability-setfcap-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "/v1/kalm-benchmark/ServiceAccount/rel-003-no-priorityclass-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-5-automount-pod-and-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "/v1/kalm-benchmark/ServiceAccount/pod-009-2-has-hostipc-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-7-using-insecure-capability-kill-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-8-using-insecure-capability-mac-override-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "/v1/kalm-benchmark/ServiceAccount/pod-009-1-use-no-hostipc-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-5-usage-of-usr-bin-scsh-in-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-3-use-gid-between-1k-10k-on-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-017-1-default-to-root-user-dedicated-sa", "/v1/res-007-3-no-cpu-limits-for-namespace/ServiceAccount/res-007-3-no-cpu-limits-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "/v1/res-008-1-no-default-memory-request-for-namespace/ServiceAccount/res-008-1-no-default-memory-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-7-use-root-user-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-043-1-mount-azure-cloud-credentials-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-19-using-insecure-capability-sys-chroot-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-9-set-runasnonroot-not-correctly-on-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-2-using-latest-image-tag-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-002-no-livenessprobe-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-1-volume-with-read-only-hostpath-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "/v1/kalm-benchmark/ServiceAccount/pod-035-21-using-insecure-capability-sys-rawio-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-1-default-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-18-using-insecure-capability-sys-boot-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-7-usage-of-bin-busybox-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-034-1-using-dangerous-capability-all-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-9-no-automount-pod-and-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/rel-001-no-readinessprobe-dedicated-sa", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "/v1/kalm-benchmark/ServiceAccount/pod-035-10-using-insecure-capability-mknod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "/v1/kalm-benchmark/ServiceAccount/pod-008-1-use-no-hostpid-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-002-1-default-memory-limits-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "/v1/res-009-1-no-resource-quota-applied-to-namespace/ServiceAccount/res-009-1-no-resource-quota-applied-to-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-11-using-insecure-capability-net-bind-service-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-030-no-securitycontext-defined-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "/v1/kalm-benchmark/ServiceAccount/rbac-016-ronin-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-15-using-insecure-capability-setgid-dedicated-sa", "/v1/kube-public/ServiceAccount/ns-002-2-place-pod-in-kube-public-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-4-use-gid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-006-2-no-ephemeral-storage-limits-dedicated-sa", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "/v1/kalm-benchmark/ServiceAccount/pod-033-2-root-fs-is-explicitly-writeable-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "/v1/res-008-2-no-default-memory-limits-for-namespace/ServiceAccount/res-008-2-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/res-007-0-no-limitrange-object-for-namespace/ServiceAccount/res-007-0-no-limitrange-object-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-019-1-default-to-root-group-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "/v1/kalm-benchmark/ServiceAccount/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes-dedicated-sa", "/v1/res-007-1-no-default-cpu-request-for-namespace/ServiceAccount/res-007-1-no-default-cpu-request-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-4-use-uid-set-in-container-takes-precedence-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-033-1-root-fs-is-writeable-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-006-1-default-ephemeral-storage-limits-from-namespace-dedicated-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "/v1/kalm-benchmark/ServiceAccount/res-001-1-default-memory-requests-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "/v1/kalm-benchmark/ServiceAccount/res-004-1-default-cpu-limits-from-namespace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/wl-001-naked-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-003-1-default-cpu-requests-from-namespace-dedicated-sa", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/ServiceAccount/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "/v1/kalm-benchmark-unrestricted-ns/ServiceAccount/res-002-2-no-memory-limits-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "/v1/kalm-benchmark/ServiceAccount/pod-019-5-use-gid-set-in-container-takes-precedence-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "/v1/kalm-benchmark/ServiceAccount/pod-008-2-pod-has-hostpid-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-3-volume-with-writeable-hostpath-by-default-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-13-using-insecure-capability-perfmon-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-032-2-privileged-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-6-usage-of-bin-csh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/sc-002-1-tag-instead-of-digest-is-fine-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-17-using-insecure-capability-setuid-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "/v1/kalm-benchmark/ServiceAccount/pod-014-no-apparmor-profile-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "/v1/res-007-2-no-default-cpu-limits-for-namespace/ServiceAccount/res-007-2-no-default-cpu-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-6-automount-pod-no-automount-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-22-using-insecure-capability-sys-ptrace-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-8-set-runasnonroot-correctly-on-container-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "/v1/kube-system/ServiceAccount/ns-002-1-place-pod-in-kube-system-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-4-automount-pod-default-sa-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "/v1/kalm-benchmark/ServiceAccount/pod-024-3-usage-of-bin-tcsh-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/res-005-1-default-ephemeral-storage-requests-from-namespace-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "/v1/np-005-network-policy-refers-no-valid-workload/ServiceAccount/np-005-network-policy-refers-no-valid-workload-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-7-no-automount-pod-default-sa-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-018-1-default-to-root-user-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-017-6-runasnonroot-is-optional-on-container-dedicated-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "/v1/np-002-2-only-egress-is-blocked/ServiceAccount/np-002-2-only-egress-is-blocked-filler-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "/v1/kalm-benchmark/ServiceAccount/pod-011-uses-hostport-dedicated-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "/v1/kalm-benchmark/ServiceAccount/pod-045-containing-cve-2021-25741-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-9-using-insecure-capability-mac-admin-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "/v1/kalm-benchmark/ServiceAccount/pod-003-8-no-automount-pod-automount-sa-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "/v1/kalm-benchmark/ServiceAccount/sc-001-3-no-proper-imagepullpolicy-set-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-20-using-insecure-capability-sys-module-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "/v1/kalm-benchmark/ServiceAccount/pod-024-0-usage-of-bin-bash-in-container-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-035-5-using-insecure-capability-fowner-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/deprecated-sa", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/ServiceAccount/np-003-network-policy-allows-access-to-cloud-metadata-api-filler-dedicated-sa", "/v1/res-008-3-no-default-memory-limits-for-namespace/ServiceAccount/res-008-3-no-default-memory-limits-for-namespace-filler-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-022-3-one-approach-to-hardening-linux-is-enough-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-042-2-volume-with-writeable-hostpath-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "/v1/kalm-benchmark/ServiceAccount/pod-017-2-use-runasnonroot-flag-on-pod-dedicated-sa", "/v1/kalm-benchmark/ServiceAccount/pod-036-keep-default-capabilities-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "/v1/kalm-benchmark/ServiceAccount/pod-019-2-use-gid-between-1k-10k-on-pod-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "/v1/kalm-benchmark/ServiceAccount/pod-017-3-runasnonroot-is-optional-dedicated-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap"], "totalResources": 279, "failedResources": 12, "warningResources": 0}], "remediation": "Disable automatic mounting of service account tokens to PODs either at the service account level or at the individual POD level, by specifying the automountServiceAccountToken: false. Note that POD level takes precedence.", "description": "Potential attacker may gain access to a POD and steal its service account token. Therefore, it is recommended to disable automatic mapping of the service account tokens in service account configuration and enable it only for PODs that need to use them.", "score": 4.3010755, "baseScore": 5, "totalResources": 279, "failedResources": 12, "warningResources": 0}, {"guid": "", "id": "C-0016", "controlID": "C-0016", "name": "Allow privilege escalation", "ruleReports": [{"name": "rule-allow-privilege-escalation", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-allow-privilege-escalation"}], "listInputIDs": ["policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-2-allow-all-host-paths-naive-specification", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-2-not-confining-apparmor", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-2-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-1-not-configuring-seccomp-by-default", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-4-allow-root-groups-in-pods-must-higher-gid", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-1-allow-root-users-in-pods", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-1-allow-privilege-escalation-in-containers", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-3-not-restricting-allowed-apparmor-profiles", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-1-allow-pods-sharing-hostpid", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-3-not-restricting-allowed-seccomp-profiles", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-010-not-dropping-all-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-003-2-allow-pods-sharing-hostpid-by-default", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-2-allow-root-users-in-pods-uid-range", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-3-allow-root-groups-in-pods-may-higher-gid", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-012-not-configuring-se-linux", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-1-allow-pods-sharing-hostipc-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-013-1-not-configuring-apparmor-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-014-2-not-confining-seccomp", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-1-allow-pods-sharing-host-network", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-011-1-allowing-read-only-root-filesystem", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-1-allow-root-groups-in-pods-must-gid-range", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-3-disallow-all-host-paths-properly", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-008-2-allow-root-groups-in-pods-may-gid-range", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-006-1-allow-all-host-paths-by-default", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-1-allow-privileged-containers", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-009-allowing-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-007-3-don-t-allow-root-users-in-pods", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-004-2-allow-pods-sharing-hostipc-namespace-by-default", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-002-2-allow-privilege-escalation-in-containers-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-001-2-allow-privileged-containers-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "policy/v1beta1/kalm-benchmark/PodSecurityPolicy/psp-005-2-allow-pods-sharing-host-network-by-default", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits"], "totalResources": 171, "failedResources": 3, "warningResources": 0}], "remediation": "If your application does not need it, make sure the allowPrivilegeEscalation field of the securityContext is set to false.", "description": "Attackers may gain access to a container and uplift its privilege to enable excessive capabilities.", "score": 1.754386, "baseScore": 6, "totalResources": 171, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0012", "controlID": "C-0012", "name": "Applications credentials in configuration files", "ruleReports": [{"name": "rule-credentials-in-env-var", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.containers[0].env[0].name", "spec.template.spec.containers[0].env[1].name", "spec.template.spec.containers[0].env[2].name", "spec.template.spec.containers[0].env[3].name", "spec.template.spec.containers[0].env[4].name", "spec.template.spec.containers[0].env[5].name", "spec.template.spec.containers[0].env[6].name", "spec.template.spec.containers[0].env[7].name", "spec.template.spec.containers[0].env[8].name", "spec.template.spec.containers[0].env[9].name", "spec.template.spec.containers[0].env[10].name", "spec.template.spec.containers[0].env[11].name", "spec.template.spec.containers[0].env[12].name", "spec.template.spec.containers[0].env[13].name"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].env[].name", "description": "Attackers can retrieve and use sensitive information provided via environment variables", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-025"}, "name": "pod-025-sensitive-key-referenced-in-environment-variable", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-in-env-var"}], "listInputIDs": ["apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened"], "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"name": "rule-credentials-configmap", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["data[aws_access_key_id]", "data[aws_secret_access_key]", "data[azure_batchai_storage_account]", "data[azure_batchai_storage_key]", "data[azure_batch_account]", "data[azure_batch_key]", "data[secret]", "data[key]", "data[password]", "data[pwd]", "data[token]", "data[jwt]", "data[bearer]", "data[credential]"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "data": {"aws_access_key_id": "XXXXXX", "aws_secret_access_key": "XXXXXX", "azure_batch_account": "XXXXXX", "azure_batch_key": "XXXXXX", "azure_batchai_storage_account": "XXXXXX", "azure_batchai_storage_key": "XXXXXX", "bearer": "XXXXXX", "credential": "XXXXXX", "jwt": "XXXXXX", "key": "XXXXXX", "password": "XXXXXX", "pwd": "XXXXXX", "secret": "XXXXXX", "token": "XXXXXX"}, "kind": "ConfigMap", "metadata": {"annotations": {"check_path": ".data.aws_access_key_id|.data.aws_secret_access_key|.data.azure_batchai_storage_account|.data.azure_batchai_storage_key|.data.azure_batch_account|.data.azure_batch_key|.data.secret|.data.key|.data.password|.data.pwd|.data.token|.data.jwt|.data.bearer|.data.credential", "description": "Attackers can retrieve and use sensitive information provided via config maps", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "CM-001"}, "name": "cm-001-sensitive-key-referenced-in-configmap", "namespace": "kalm-benchmark"}}]}, "rulename": "rule-credentials-configmap"}], "listInputIDs": ["/v1/kalm-benchmark/ConfigMap/cm-001-sensitive-key-referenced-in-configmap"], "totalResources": 1, "failedResources": 1, "warningResources": 0}], "remediation": "Use Kubernetes secrets or Key Management Systems to store credentials.", "description": "Attackers who have access to configuration files can steal the stored secrets and use them. This control checks if ConfigMaps or pod specifications have sensitive information in their configuration.", "score": 1.4184397, "baseScore": 8, "totalResources": 141, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0059", "controlID": "C-0059", "name": "CVE-2021-25742-nginx-ingress-snippet-annotation-vulnerability", "ruleReports": [], "remediation": "To mitigate this vulnerability: 1. Upgrade to a version that allows mitigation (>= v0.49.1 or >= v1.0.1), 2. Set allow-snippet-annotations to false in your ingress-nginx ConfigMap based on how you deploy ingress-nginx", "description": "Security issue in ingress-nginx where a user that can create or update ingress objects can use the custom snippets feature to obtain all secrets in the cluster (see more at https://github.com/kubernetes/ingress-nginx/issues/7837)", "score": 5, "baseScore": 5, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0068", "controlID": "C-0068", "name": "PSP enabled", "ruleReports": [], "remediation": "Turn Pod Security Policies on in your cluster, if you use other admission controllers to control the behavior that PSP controls, exclude this control from your scans", "description": "PSP enable fine-grained authorization of pod creation and it is important to enable it", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0047", "controlID": "C-0047", "name": "Exposed dashboard", "ruleReports": [], "remediation": "Update dashboard version to v2.0.1 and above.", "description": "Kubernetes dashboard versions before v2.0.1 do not support user authentication. If exposed externally, it will allow unauthenticated remote management of the cluster. This control checks presence of the kubernetes-dashboard deployment and its version number.", "score": 6, "baseScore": 6, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0005", "controlID": "C-0005", "name": "Control plane hardening", "ruleReports": [], "remediation": "Set the insecure-port flag of the API server to zero.", "description": "Kubernetes control plane API is running with non-secure port enabled which allows attackers to gain unprotected access to the cluster.", "score": 8, "baseScore": 8, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0038", "controlID": "C-0038", "name": "Host PID/IPC privileges", "ruleReports": [{"name": "host-pid-ipc-privileges", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostIPC"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostIPC", "description": "Containers should be isolated from the host machine as much as possible. `hostIPC` on pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-009-2"}, "name": "pod-009-2-has-hostipc-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.hostPID"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostPID", "description": "Containers should be isolated from the host machine as much as possible. `hostPID` pods may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-008-2"}, "name": "pod-008-2-pod-has-hostpid-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-pid-ipc-privileges"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace"], "totalResources": 140, "failedResources": 2, "warningResources": 0}], "remediation": "Remove hostPID and hostIPC from the yaml file(s) privileges unless they are absolutely necessary.", "description": "Containers should be isolated from the host machine as much as possible. The hostPID and hostIPC fields in deployment yaml may allow cross-container influence and may expose the host itself to potentially malicious or destructive actions. This control identifies all PODs using hostPID or hostIPC privileges.", "score": 1.4285715, "baseScore": 5, "totalResources": 140, "failedResources": 2, "warningResources": 0}, {"guid": "", "id": "C-0013", "controlID": "C-0013", "name": "Non-root containers", "ruleReports": [{"name": "non-root-containers", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-7"}, "name": "pod-017-7-use-root-user-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-1"}, "name": "pod-031-1-allowed-privilege-escalation-by-default", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.securityContext.runAsNonRoot", "value": "true"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-1"}, "name": "pod-017-1-default-to-root-user", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "Having neither runAsNonRoot nor `runAsUser>1000` means a user has elevated privileges", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-4"}, "name": "pod-017-4-use-root-user-in-pod", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.runAsNonRoot"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.securityContext.runAsNonRoot|.spec.securityContext.runAsUser|.spec.containers[].securityContext.runAsNonRoot|.spec.containers[].securityContext.runAsUser", "description": "runAsNonRoot setting on container takes precedence", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-017-9"}, "name": "pod-017-9-set-runasnonroot-not-correctly-on-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": ["spec.template.spec.container[0].securityContext.allowPrivilegeEscalation"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Avoid using the privileged flag, and if your container does need additional capabilities, add only the ones you need through the capabilities settings. ", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-031-2"}, "name": "pod-031-2-allowed-privilege-escalation-explicitly", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.securityContext.allowPrivilegeEscalation", "value": "false"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].securityContext.privileged|.spec.containers[].securityContext.allowPrivilegeEscalation", "description": "Privileged containers can do almost every action that can be performed directly on the host.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-032-2"}, "name": "pod-032-2-privileged-container", "namespace": "kalm-benchmark"}}]}, "rulename": "non-root-containers"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities"], "totalResources": 140, "failedResources": 7, "warningResources": 0}], "remediation": "If your application does not need root privileges, make sure to define the runAsUser or runAsGroup under the PodSecurityContext and use user ID 1000 or higher. Do not turn on allowPrivlegeEscalation bit and make sure runAsNonRoot is true.", "description": "Potential attackers may gain access to a container and leverage its existing privileges to conduct an attack. Therefore, it is not recommended to deploy containers with root privileges unless it is absolutely necessary. This control identifies all the Pods running as root or can escalate to root.", "score": 5, "baseScore": 6, "totalResources": 140, "failedResources": 7, "warningResources": 0}, {"guid": "", "id": "C-0041", "controlID": "C-0041", "name": "HostNetwork access", "ruleReports": [{"name": "host-network-access", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": ["spec.template.spec.hostNetwork"], "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.hostNetwork", "description": "Containers should be isolated from the host machine as much as possible.", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "POD-010-2"}, "name": "pod-010-2-has-hostnetwork-set", "namespace": "kalm-benchmark"}}]}, "rulename": "host-network-access"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api"], "totalResources": 140, "failedResources": 1, "warningResources": 0}], "remediation": "Only connect PODs to host network when it is necessary. If not, set the hostNetwork field of the pod spec to false, or completely remove it (false is the default). Whitelist only those PODs that must have access to host network by design.", "description": "Potential attackers may gain access to a POD and inherit access to the entire host network. For example, in AWS case, they will have access to the entire VPC. This control identifies all the PODs with host network access enabled.", "score": 0.71428573, "baseScore": 5, "totalResources": 140, "failedResources": 1, "warningResources": 0}, {"guid": "", "id": "C-0009", "controlID": "C-0009", "name": "Resource policies", "ruleReports": [{"name": "resource-policies", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-2"}, "name": "res-004-2-no-cpu-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-2"}, "name": "res-002-2-no-memory-limits", "namespace": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.cpu", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.cpu", "description": "not setting CPU limit can lead to the pod suffocating the node by using all available CPU", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-004-1"}, "name": "res-004-1-default-cpu-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}, {"alertMessage": "", "failedPaths": null, "fixPaths": [{"path": "spec.template.spec.containers[0].resources.limits.memory", "value": "YOUR_VALUE"}], "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "apps/v1", "kind": "Deployment", "metadata": {"annotations": {"check_path": ".spec.containers[].resources.limits.memory", "description": "not setting memory limit can lead to the pod suffocating the node by using all available memory", "expected": "pass"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "RES-002-1"}, "name": "res-002-1-default-memory-limits-from-namespace", "namespace": "kalm-benchmark"}}]}, "rulename": "resource-policies"}], "listInputIDs": ["apps/v1/kalm-benchmark/Deployment/pod-034-1-using-dangerous-capability-all", "apps/v1/kalm-benchmark/Deployment/pod-017-1-default-to-root-user", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-004-2-no-cpu-limits", "apps/v1/kalm-benchmark/Deployment/pod-031-1-allowed-privilege-escalation-by-default", "apps/v1/kalm-benchmark/Deployment/pod-010-1-use-no-hostnetwork", "apps/v1/kube-system/Deployment/ns-002-1-place-pod-in-kube-system", "apps/v1/kalm-benchmark/Deployment/pod-017-5-use-runasnonroot-flag-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-20-using-insecure-capability-sys-module", "apps/v1/kalm-benchmark/Deployment/pod-042-1-volume-with-read-only-hostpath", "apps/v1/kalm-benchmark/Deployment/res-001-1-default-memory-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-3-usage-of-bin-tcsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-035-5-using-insecure-capability-fowner", "apps/v1/kalm-benchmark/Deployment/sc-001-1-imagepullpolicy-defaults-to-always", "apps/v1/kalm-benchmark/Deployment/pod-003-2-default-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-016-no-podsecuritycontext-defined", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-003-2-no-cpu-requests", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-002-2-no-memory-limits", "apps/v1/kalm-benchmark/Deployment/res-003-1-default-cpu-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-1-default-to-root-user", "apps/v1/kalm-benchmark/Deployment/rel-002-no-livenessprobe", "apps/v1/np-002-1-only-ingress-is-blocked/Deployment/np-002-1-only-ingress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-010-2-has-hostnetwork-set", "apps/v1/kalm-benchmark/Deployment/pod-022-3-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-035-12-using-insecure-capability-net-raw", "apps/v1/kalm-benchmark/Deployment/pod-017-4-use-root-user-in-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-4-automount-pod-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-024-5-usage-of-usr-bin-scsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-017-2-use-runasnonroot-flag-on-pod", "apps/v1/kalm-benchmark/Deployment/pod-021-1-using-sysctl-net.ipv4.tcp-keepalive-time", "apps/v1/res-007-0-no-limitrange-object-for-namespace/Deployment/res-007-0-no-limitrange-object-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-002-1-explicit-default-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-18-using-insecure-capability-sys-boot", "apps/v1/kalm-benchmark/Deployment/pod-031-2-allowed-privilege-escalation-explicitly", "apps/v1/kalm-benchmark/Deployment/rel-001-no-readinessprobe", "apps/v1/res-009-1-no-resource-quota-applied-to-namespace/Deployment/res-009-1-no-resource-quota-applied-to-namespace", "apps/v1/kalm-benchmark/Deployment/sc-001-2-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-013-use-serviceaccount-field", "apps/v1/kalm-benchmark/Deployment/pod-033-1-root-fs-is-writeable-by-default", "apps/v1/kalm-benchmark/Deployment/pod-018-5-use-uid-set-in-container-takes-precedence", "apps/v1/res-008-3-no-default-memory-limits-for-namespace/Deployment/res-008-3-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-003-5-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-035-17-using-insecure-capability-setuid", "apps/v1/kalm-benchmark/Deployment/rel-004-1-no-node-selection-specified", "apps/v1/kalm-benchmark/Deployment/pod-011-uses-hostport", "apps/v1/res-007-2-no-default-cpu-limits-for-namespace/Deployment/res-007-2-no-default-cpu-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-042-3-volume-with-writeable-hostpath-by-default", "apps/v1/kalm-benchmark/Deployment/pod-024-4-usage-of-bin-zsh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-014-no-apparmor-profile", "apps/v1/kalm-benchmark/Deployment/pod-003-3-default-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-036-keep-default-capabilities", "apps/v1/kalm-benchmark/Deployment/pod-002-2-no-sa-specified", "apps/v1/kalm-benchmark/Deployment/pod-030-no-securitycontext-defined", "apps/v1/kalm-benchmark/Deployment/pod-019-5-use-gid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-034-3-using-dangerous-capability-net-admin", "apps/v1/kalm-benchmark/Deployment/pod-035-8-using-insecure-capability-mac-override", "apps/v1/np-005-network-policy-refers-no-valid-workload/Deployment/np-005-network-policy-refers-no-valid-workload", "apps/v1/kalm-benchmark/Deployment/pod-025-sensitive-key-referenced-in-environment-variable", "apps/v1/kalm-benchmark/Deployment/pod-032-2-privileged-container", "apps/v1/kalm-benchmark/Deployment/pod-035-16-using-insecure-capability-setpcap", "apps/v1/kalm-benchmark/Deployment/pod-035-1-using-insecure-capability-audit-write", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-006-2-no-ephemeral-storage-limits", "apps/v1/res-007-3-no-cpu-limits-for-namespace/Deployment/res-007-3-no-cpu-limits-for-namespace", "apps/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Deployment/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-009-2-has-hostipc-set", "apps/v1/kalm-benchmark/Deployment/pod-035-19-using-insecure-capability-sys-chroot", "apps/v1/kalm-benchmark/Deployment/pod-017-9-set-runasnonroot-not-correctly-on-container", "apps/v1/kalm-benchmark/Deployment/pod-003-8-no-automount-pod-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-043-1-mount-azure-cloud-credentials", "apps/v1/kalm-benchmark/Deployment/pod-024-7-usage-of-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/pod-021-2-using-sysctl-net.ipv4.tcp-keepalive-probes", "apps/v1/kalm-benchmark/Deployment/sc-001-3-no-proper-imagepullpolicy-set", "apps/v1/kalm-benchmark/Deployment/pod-035-4-using-insecure-capability-dac-overrides", "apps/v1/kalm-benchmark/Deployment/pod-019-4-use-gid-set-in-container-takes-precedence", "apps/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Deployment/np-003-network-policy-allows-access-to-cloud-metadata-api", "apps/v1/kalm-benchmark/Deployment/pod-035-3-using-insecure-capability-chown", "apps/v1/kalm-benchmark/Deployment/pod-035-10-using-insecure-capability-mknod", "apps/v1/kalm-benchmark/Deployment/sc-002-3-no-explicit-tag", "apps/v1/kalm-benchmark/Deployment/pod-022-2-one-approach-to-hardening-linux-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-024-6-usage-of-bin-csh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-045-containing-cve-2021-25741", "apps/v1/kalm-benchmark/Deployment/pod-035-13-using-insecure-capability-perfmon", "apps/v1/np-004-network-policy-allows-access-to-kubelet/Deployment/np-004-network-policy-allows-access-to-kubelet", "apps/v1/kalm-benchmark/Deployment/pod-024-0-usage-of-bin-bash-in-container", "apps/v1/kalm-benchmark/Deployment/res-004-1-default-cpu-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-024-2-usage-of-bin-ksh-in-container", "apps/v1/kalm-benchmark/Deployment/pod-044-2-mounting-docker-directory", "apps/v1/res-008-2-no-default-memory-limits-for-namespace/Deployment/res-008-2-no-default-memory-limits-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-021-0-using-sysctl-kernel.shm-rmid-forced", "apps/v1/kalm-benchmark/Deployment/pod-042-2-volume-with-writeable-hostpath", "apps/v1/kalm-benchmark/Deployment/pod-003-7-no-automount-pod-default-sa", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-001-2-no-memory-requests", "apps/v1/kalm-benchmark/Deployment/pod-034-2-using-dangerous-capability-sys-admin", "apps/v1/kalm-benchmark/Deployment/pod-017-8-set-runasnonroot-correctly-on-container", "apps/v1/kube-public/Deployment/ns-002-2-place-pod-in-kube-public", "apps/v1/kalm-benchmark/Deployment/pod-019-1-default-to-root-group", "apps/v1/kalm-benchmark/Deployment/pod-024-1-usage-of-sbin-sh-in-container", "apps/v1/res-008-1-no-default-memory-request-for-namespace/Deployment/res-008-1-no-default-memory-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-023-no-seccomp-profile-defined", "apps/v1/kalm-benchmark/Deployment/pod-035-6-using-insecure-capability-fsetid", "/v1/kalm-benchmark/Pod/wl-001-naked-pod", "apps/v1/kalm-benchmark/Deployment/pod-003-9-no-automount-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-018-4-use-uid-set-in-container-takes-precedence", "apps/v1/kalm-benchmark/Deployment/pod-044-1-mounting-docker-socket", "apps/v1/kalm-benchmark/Deployment/pod-008-1-use-no-hostpid", "apps/v1/kalm-benchmark/Deployment/pod-003-1-default-pod-and-sa", "apps/v1/kalm-benchmark/Deployment/pod-033-2-root-fs-is-explicitly-writeable", "apps/v1/kalm-benchmark-unrestricted-ns/Deployment/res-005-2-no-ephemeral-storage-requests", "apps/v1/kalm-benchmark/Deployment/pod-003-6-automount-pod-no-automount-sa", "apps/v1/kalm-benchmark/Deployment/pod-009-1-use-no-hostipc", "apps/v1/kalm-benchmark/Deployment/res-002-1-default-memory-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-15-using-insecure-capability-setgid", "apps/v1/kalm-benchmark/Deployment/pod-019-3-use-gid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/pod-017-3-runasnonroot-is-optional", "apps/v1/kalm-benchmark/Deployment/pod-024-8-usage-of-usr-bin-busybox-in-container", "apps/v1/kalm-benchmark/Deployment/rel-003-no-priorityclass", "apps/v1/kalm-benchmark/Deployment/pod-012-use-hostaliases-to-modify-pods--etc-hosts", "apps/v1/kalm-benchmark/Deployment/sc-002-1-tag-instead-of-digest-is-fine", "apps/v1/kalm-benchmark/Deployment/pod-035-14-using-insecure-capability-setfcap", "apps/v1/kalm-benchmark/Deployment/pod-035-9-using-insecure-capability-mac-admin", "apps/v1/kalm-benchmark/Deployment/sc-002-2-using-latest-image-tag", "apps/v1/kalm-benchmark/Deployment/pod-017-6-runasnonroot-is-optional-on-container", "apps/v1/res-007-1-no-default-cpu-request-for-namespace/Deployment/res-007-1-no-default-cpu-request-for-namespace", "apps/v1/kalm-benchmark/Deployment/pod-018-2-use-uid-between-1k-10k-on-pod", "apps/v1/kalm-benchmark/Deployment/rel-004-3-only-nodeselector-is-enough", "apps/v1/np-002-2-only-egress-is-blocked/Deployment/np-002-2-only-egress-is-blocked", "apps/v1/kalm-benchmark/Deployment/pod-035-7-using-insecure-capability-kill", "apps/v1/kalm-benchmark/Deployment/pod-022-1-linux-is-not-hardened", "apps/v1/kalm-benchmark/Deployment/pod-032-1-non-privileged-container-by-default", "apps/v1/default/Deployment/ns-001-use-default-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-11-using-insecure-capability-net-bind-service", "apps/v1/kalm-benchmark/Deployment/res-006-1-default-ephemeral-storage-limits-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-008-2-pod-has-hostpid-set", "apps/v1/kalm-benchmark/Deployment/pod-035-2-using-insecure-capability-bpf", "apps/v1/kalm-benchmark/Deployment/rel-004-2-only-nodeaffinity-is-enough", "apps/v1/kalm-benchmark/Deployment/pod-018-3-use-uid-between-1k-10k-on-container", "apps/v1/kalm-benchmark/Deployment/res-005-1-default-ephemeral-storage-requests-from-namespace", "apps/v1/kalm-benchmark/Deployment/pod-035-22-using-insecure-capability-sys-ptrace", "apps/v1/kalm-benchmark/Deployment/pod-017-7-use-root-user-on-container", "apps/v1/kalm-benchmark/Deployment/pod-035-21-using-insecure-capability-sys-rawio", "apps/v1/kalm-benchmark/Deployment/pod-019-2-use-gid-between-1k-10k-on-pod"], "totalResources": 140, "failedResources": 4, "warningResources": 0}], "remediation": "Define LimitRange and Resource Limits in the namespace or in the deployment/POD yamls.", "description": "CPU and memory resources should have a limit set for every container or a namespace to prevent resource exhaustion. This control identifies all the Pods without resource limit definitions by checking their yaml definition file as well as their namespace LimitRange objects. It is also recommended to use ResourceQuota object to restrict overall namespace resources, but this is not verified by this control.", "score": 2.857143, "baseScore": 2, "totalResources": 140, "failedResources": 4, "warningResources": 0}, {"guid": "", "id": "C-0054", "controlID": "C-0054", "name": "Cluster internal networking", "ruleReports": [{"name": "internal-networking", "remediation": "", "ruleStatus": {"status": "success", "message": ""}, "ruleResponses": [{"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"check_path": "NetworkPolicy.metadata.namespace|.metadata.namespace", "expected": "alert"}, "labels": {"app.kubernetes.io/part-of": "kalm-benchmark", "check": "NP-001"}, "name": "np-001-namespace-without-network-policy", "namespace": "np-001-namespace-without-network-policy"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark-unrestricted-ns"}}]}, "rulename": "internal-networking"}, {"alertMessage": "", "failedPaths": null, "fixPaths": null, "ruleStatus": "failed", "packagename": "", "alertScore": 0, "alertObject": {"k8sApiObjects": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"labels": {"app.kubernetes.io/part-of": "kalm-benchmark"}, "name": "kalm-benchmark"}}]}, "rulename": "internal-networking"}], "listInputIDs": ["/v1/res-008-1-no-default-memory-request-for-namespace/Namespace/res-008-1-no-default-memory-request-for-namespace", "/v1/res-008-2-no-default-memory-limits-for-namespace/Namespace/res-008-2-no-default-memory-limits-for-namespace", "/v1/np-001-namespace-without-network-policy/Namespace/np-001-namespace-without-network-policy", "/v1/res-007-2-no-default-cpu-limits-for-namespace/Namespace/res-007-2-no-default-cpu-limits-for-namespace", "/v1/np-002-2-only-egress-is-blocked/Namespace/np-002-2-only-egress-is-blocked", "/v1/np-003-network-policy-allows-access-to-cloud-metadata-api/Namespace/np-003-network-policy-allows-access-to-cloud-metadata-api", "/v1/res-008-3-no-default-memory-limits-for-namespace/Namespace/res-008-3-no-default-memory-limits-for-namespace", "/v1/res-007-1-no-default-cpu-request-for-namespace/Namespace/res-007-1-no-default-cpu-request-for-namespace", "/v1/res-009-1-no-resource-quota-applied-to-namespace/Namespace/res-009-1-no-resource-quota-applied-to-namespace", "/v1/res-007-0-no-limitrange-object-for-namespace/Namespace/res-007-0-no-limitrange-object-for-namespace", "/v1//Namespace/kalm-benchmark-unrestricted-ns", "/v1/np-004-network-policy-allows-access-to-kubelet/Namespace/np-004-network-policy-allows-access-to-kubelet", "/v1/res-007-3-no-cpu-limits-for-namespace/Namespace/res-007-3-no-cpu-limits-for-namespace", "/v1/np-005-network-policy-refers-no-valid-workload/Namespace/np-005-network-policy-refers-no-valid-workload", "/v1/np-002-1-only-ingress-is-blocked/Namespace/np-002-1-only-ingress-is-blocked", "/v1//Namespace/kalm-benchmark", "/v1/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace/Namespace/res-009-2-no-hard-quotas-defined-in-resourcequota-for-namespace"], "totalResources": 17, "failedResources": 3, "warningResources": 0}], "remediation": "Define Kubernetes network policies or use alternative products to protect cluster network.", "description": "If no network policy is defined, attackers who gain access to a container may use it to move laterally in the cluster. This control lists namespaces in which no network policy is defined.", "score": 17.647058, "baseScore": 4, "totalResources": 17, "failedResources": 3, "warningResources": 0}, {"guid": "", "id": "C-0066", "controlID": "C-0066", "name": "Secret/ETCD encryption enabled", "ruleReports": [], "remediation": "Turn on the etcd encryption in your cluster, for more see the vendor documentation.", "description": "All Kubernetes Secrets are stored primarily in etcd therefore it is important to encrypt it.", "score": 3, "baseScore": 3, "totalResources": 0, "failedResources": 0, "warningResources": 0}, {"guid": "", "id": "C-0070", "controlID": "C-0070", "name": "Enforce Kubelet client TLS authentication", "ruleReports": [], "remediation": "Start the kubelet with the --client-ca-file flag, providing a CA bundle to verify client certificates with.", "description": "Kubelets are the node level orchestrator in Kubernetes control plane. They are publishing service port 10250 where they accept commands from API server. Operator must make sure that only API server is allowed to submit commands to Kubelet. This is done through client certificate verification, must configure Kubelet with client CA file to use for this purpose.", "score": 10, "baseScore": 10, "totalResources": 0, "failedResources": 0, "warningResources": 0}], "score": 9.843381, "wcsScore": 11429, "totalResources": 356, "failedResources": 142, "warningResources": 0}]